{"version":3,"file":"static/js/741.fce26b32.chunk.js","mappings":"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","sources":["components/Error.jsx","components/SectionForm/SectionForm.jsx","images/checkbox.svg","components/SectionForm/SectionForm.styled.jsx","components/SectionServices/SectionServices.styled.jsx","helpers/phoneUaInput.js"],"sourcesContent":["export const Error = ({ children }) => {\n  return (\n    <div\n      style={{\n        color: 'red',\n        fontSize: 14,\n        textAlign: 'center',\n        marginTop: '-20px',\n        marginBottom: '10px',\n      }}\n    >\n      {children.toLowerCase()}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Formik, ErrorMessage, Form } from 'formik';\nimport * as yup from 'yup';\nimport { formatPhoneNumber } from 'helpers/phoneUaInput';\nimport { Error } from 'components/Error';\nimport {\n  StyledCircleDiv,\n  StyledContainer,\n} from 'components/SectionServices/SectionServices.styled';\nimport {\n  StyledBackGroundImage,\n  StyledBgImg,\n  StyledDiv,\n  StyledH2,\n  StyledH3,\n  StyledFormDiv,\n  StyledLabel,\n  StyledField,\n  StyledSubmitDiv,\n  StyledButton,\n  StyledBorder,\n  StyledBorderNumber,\n  StyledSvg,\n  StyledCheckboxLabel,\n  StyledCheckboxField,\n  StyledP,\n  StyledLink,\n  StyledLineDiv,\n  StyledFlexDiv,\n  StyledSubmittedButton,\n  StyledSubmittedSpan,\n  StyledSubmittedP,\n} from './SectionForm.styled';\nimport bg from '../../images/bg-circle.png';\nimport sprite from '../../images/sprite.svg';\n\nconst schema = yup.object().shape({\n  name: yup.string().required('Please enter your name'),\n  number: yup\n    .string()\n    .min(10, 'Must be more than 10 characters')\n    .required(\"Please enter the phone's number\"),\n  checkbox: yup.boolean().required('Please check the checkbox to continue'),\n});\n\nconst SectionForm = () => {\n  const [t] = useTranslation();\n  const [formSubmitted, setFormSubmitted] = useState(false);\n  const handleSubmit = ({ name, number }, { resetForm }) => {\n    setFormSubmitted(true);\n    // console.log(name, number);\n    // sending data\n    resetForm();\n  };\n\n  return (\n    <section>\n      <StyledBackGroundImage>\n        <StyledContainer>\n          <StyledBgImg src={bg} alt=\"background-circle\" loading=\"lazy\" />\n          <StyledDiv>\n            <StyledCircleDiv></StyledCircleDiv>\n            <StyledH2>{t('form.h2')}</StyledH2>\n          </StyledDiv>\n          <StyledH3>{t('form.h3')}</StyledH3>\n          <Formik\n            initialValues={{ name: '', number: '', checkbox: false }}\n            validationSchema={schema}\n            onSubmit={handleSubmit}\n          >\n            {({ setFieldValue }) => (\n              <Form>\n                <StyledFormDiv>\n                  <StyledLabel htmlFor=\"name\">\n                    {t('form.labels.0')}{' '}\n                  </StyledLabel>\n                  <StyledBorder></StyledBorder>\n                  <StyledSvg width=\"22\" height=\"22\">\n                    <use href={`${sprite}#icon-address-book`}></use>\n                  </StyledSvg>\n                  <StyledField\n                    name=\"name\"\n                    id=\"name\"\n                    placeholder={t('form.placeholderName')}\n                    autoComplete=\"off\"\n                  />\n                  <ErrorMessage name=\"name\" component={Error} />\n                </StyledFormDiv>\n\n                <StyledFormDiv>\n                  <StyledLabel htmlFor=\"number\">\n                    {t('form.labels.1')}\n                  </StyledLabel>\n                  <StyledBorderNumber></StyledBorderNumber>\n                  <StyledSvg width=\"22\" height=\"22\">\n                    <use href={`${sprite}#icon-call-yellow-outline`}></use>\n                  </StyledSvg>\n                  <StyledField\n                    name=\"number\"\n                    id=\"number\"\n                    type=\"tel\"\n                    placeholder=\"+380 XXX XX XX XX\"\n                    autoComplete=\"off\"\n                    onChange={e => {\n                      const formattedNumber = formatPhoneNumber(e.target.value);\n                      setFieldValue('number', formattedNumber);\n                    }}\n                    onFocus={e => {\n                      if (!e.target.value) {\n                        setFieldValue('number', '+380 ');\n                      }\n                    }}\n                  />\n                  <ErrorMessage name=\"number\" component={Error} />\n                </StyledFormDiv>\n\n                <StyledSubmitDiv>\n                  <StyledCheckboxLabel>\n                    <StyledCheckboxField\n                      name=\"checkbox\"\n                      type=\"checkbox\"\n                      required\n                    />\n                    <ErrorMessage name=\"checkbox\" component={Error} />\n                    {t('form.checkboxText')}\n                  </StyledCheckboxLabel>\n                  {!formSubmitted && (\n                    <StyledButton type=\"submit\">\n                      {t('header.buttonText')}\n                    </StyledButton>\n                  )}\n                  {formSubmitted && (\n                    <StyledSubmittedButton>\n                      <StyledSubmittedP>\n                        <StyledSubmittedSpan>\n                          {t('form.buttonSubmittedText.0')}\n                        </StyledSubmittedSpan>\n                        {t('form.buttonSubmittedText.1')}\n                      </StyledSubmittedP>\n                    </StyledSubmittedButton>\n                  )}\n                </StyledSubmitDiv>\n              </Form>\n            )}\n          </Formik>\n          <StyledFlexDiv>\n            <StyledLineDiv></StyledLineDiv>\n            <div>\n              <StyledP>{t('form.p')}</StyledP>\n              <StyledLink href=\"tel:050 936 34 00\">050 936 34 00</StyledLink>\n            </div>\n          </StyledFlexDiv>\n        </StyledContainer>\n      </StyledBackGroundImage>\n    </section>\n  );\n};\n\nexport default SectionForm;\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgCheckbox(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 8,\n    viewBox: \"0 0 12 8\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector 29\",\n    d: \"M1 4L4.33333 7L11 1\",\n    stroke: \"#FDC70D\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCheckbox);\nexport default __webpack_public_path__ + \"static/media/checkbox.1f4f874464e9a5df5d503a994299a7d7.svg\";\nexport { ForwardRef as ReactComponent };","import styled, { keyframes } from 'styled-components';\nimport { Field } from 'formik';\nimport bg1x from '../../images/mobile/backgrounds/form-background@1x-min.jpg';\nimport bg2x from '../../images/mobile/backgrounds/form-background@2x-min.jpg';\nimport check from '../../images/checkbox.svg';\n\nexport const StyledBackGroundImage = styled.div`\n  background-image: url(${bg1x});\n  background-repeat: no-repeat;\n  background-size: cover;\n  width: 100vw;\n  height: 645px;\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url(${bg2x});\n  }\n`;\n\nexport const StyledBgImg = styled.img`\n  position: absolute;\n  right: 0;\n  top: -240px;\n`;\n\nexport const StyledDiv = styled.div`\n  position: absolute;\n  z-index: 2;\n  top: 49px;\n  right: 38px;\n  display: flex;\n  flex-direction: row-reverse;\n  align-items: center;\n  gap: 10px;\n`;\n\nexport const StyledH2 = styled.h2`\n  color: rgba(255, 255, 255, 0.8);\n  text-align: right;\n  font-size: 12px;\n  line-height: 1.5;\n  opacity: 0.5;\n`;\n\nexport const StyledH3 = styled.h3`\n  width: 248px;\n  color: var(--light-color);\n  text-align: center;\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 1.2;\n  text-transform: uppercase;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 32px;\n`;\n\nexport const StyledFormDiv = styled.div`\n  position: relative;\n`;\n\nexport const StyledField = styled(Field)`\n  max-width: 270px;\n  height: 60px;\n  border-radius: 500px;\n  border: 1px solid #dadada;\n  padding-left: 53px;\n  padding-right: 5px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 32px;\n  display: block;\n  background: transparent;\n  color: var(--grey-color);\n  font-size: 16px;\n  line-height: 1.5;\n  &::placeholder {\n    opacity: 0.2;\n  }\n  &:focus,\n  &:active,\n  &:focus-visible {\n    outline: 0px solid #dadada;\n  }\n  @media screen and (min-width: 350px) {\n    width: 270px;\n  }\n`;\n\nexport const StyledLabel = styled.label`\n  color: var(--light-color);\n  font-size: 16px;\n  line-height: 1.5;\n  position: absolute;\n  z-index: 9;\n  left: 48px;\n  top: -12px;\n`;\n\nexport const StyledBorder = styled.div`\n  background-color: var(--primary-color);\n  height: 1px;\n  width: 85px;\n  position: absolute;\n  z-index: 5;\n  left: 42px;\n  top: 0;\n`;\n\nexport const StyledBorderNumber = styled.div`\n  background-color: var(--primary-color);\n  height: 2px;\n  width: 138px;\n  position: absolute;\n  z-index: 5;\n  left: 42px;\n  top: 0;\n`;\n\nexport const StyledSvg = styled.svg`\n  position: absolute;\n  top: 20px;\n  left: 36px;\n`;\n\nexport const StyledSubmitDiv = styled.div`\n  display: flex;\n  flex-direction: column-reverse;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const StyledButton = styled.button`\n  display: flex;\n  max-width: 330px;\n  height: 60px;\n  justify-content: center;\n  align-items: center;\n  color: var(--light-color);\n  text-align: center;\n  font-weight: 500;\n  line-height: 1.5;\n  text-transform: uppercase;\n  background: linear-gradient(95deg, #fdc70d 0%, #fdab0d 100%);\n  box-shadow: 0px 24px 50px -20px #fdab0d;\n  border-radius: 500px;\n  @media screen and (min-width: 350px) {\n    width: 330px;\n  }\n`;\n\nconst fadeIn = keyframes`\n0% {\n  opacity: 0;\n}\n50% {\n  opacity: 0.2;\n}\n100% {\n  opacity: 1;\n}\n`;\n\nexport const StyledSubmittedButton = styled.div`\n  display: flex;\n  max-width: 330px;\n  height: 60px;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  background-color: rgba(49, 176, 4, 1);\n  border-radius: 500px;\n  animation: ${fadeIn} 500ms var(--animation-cubic);\n  @media screen and (min-width: 350px) {\n    width: 330px;\n  }\n`;\n\nexport const StyledSubmittedSpan = styled.span`\n  color: var(--light-color);\n  line-height: 1.5;\n  font-size: 18px;\n  font-weight: 500;\n  text-transform: uppercase;\n`;\n\nexport const StyledSubmittedP = styled.p`\n  display: flex;\n  flex-direction: column;\n  color: var(--light-color);\n  font-size: 14px;\n  line-height: 1.5;\n`;\n\nexport const StyledCheckboxField = styled(Field)`\n  appearance: none;\n  width: 18px;\n  height: 18px;\n  border-radius: 4px;\n  border: 1px solid #dadada;\n  background: var(--background-color);\n  &:checked {\n    background-image: url(${check});\n    background-repeat: no-repeat;\n    background-position: center;\n  }\n`;\n\nexport const StyledCheckboxLabel = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  color: var(--grey-color);\n  font-size: 12px;\n  font-weight: 300;\n  line-height: 1.5;\n  margin-bottom: 43px;\n`;\n\nexport const StyledFlexDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n`;\n\nexport const StyledLineDiv = styled.div`\n  width: 2px;\n  height: 74px;\n  border-radius: 3px;\n  background: var(--accent-color);\n`;\n\nexport const StyledP = styled.p`\n  color: var(--light-color);\n  line-height: 1.5;\n`;\nexport const StyledLink = styled.a`\n  color: var(--accent-color);\n  font-size: 30px;\n  line-height: 1.5;\n`;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledContainer = styled.div`\n  padding: 80px 15px 80px 15px;\n  margin: 0 auto;\n  box-sizing: border-box;\n  outline: solid tomato;\n  position: relative;\n  text-align: left;\n  @media screen and (min-width: 390px) {\n    width: 390px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 768px;\n  }\n  @media screen and (min-width: 1512px) {\n    width: 1512px;\n    padding: 100px 156px 150px 156px;\n  }\n`;\n\nexport const StyledBgSvg = styled.svg`\n  position: absolute;\n  top: 24px;\n  right: 7px;\n`;\n\nexport const StyledDiv = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 10px;\n`;\n\nexport const StyledCircleDiv = styled.div`\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  background: linear-gradient(95deg, #fdc70d 0%, #fdab0d 100%);\n`;\n\nexport const StyledH2 = styled.h2`\n  text-align: right;\n  font-size: 12px;\n  line-height: 1.5;\n  opacity: 0.5;\n`;\n\nexport const StyledH3 = styled.h3`\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 1.2;\n  text-transform: uppercase;\n  position: relative;\n  z-index: 2;\n  margin-bottom: 20px;\n`;\n\nexport const StyledSpan = styled.span`\n  color: var(--accent-color);\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 1.2;\n  text-transform: uppercase;\n`;\n\nexport const StyledP = styled.p`\n  font-size: 16px;\n  line-height: 1.5;\n  margin-bottom: 30px;\n`;\n\nexport const StyledSvg = styled.svg`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n`;\n\nexport const StyledH4 = styled.h4`\n  color: var(--light-color);\n  font-size: 20px;\n  font-weight: 500;\n  line-height: 1.2;\n  margin-left: 16px;\n`;\nexport const StyledH402 = styled.h4`\n  font-size: 20px;\n  font-weight: 500;\n  line-height: 1.2;\n  margin-left: 16px;\n`;\n\nexport const StyledServicesDiv = styled.div`\n  position: relative;\n  z-index: 2;\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  max-width: 360px;\n  max-height: 374px;\n  border-radius: 8px;\n  background: #242424;\n  box-shadow: 10px 10px 15px 0px rgba(71, 71, 71, 0.2);\n  padding-bottom: 16px;\n  cursor: pointer;\n`;\n\nexport const StyledServicesDiv02 = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  max-width: 360px;\n  max-height: 374px;\n  border-radius: 8px;\n  background: radial-gradient(50% 50% at 50% 50%, #efd98f 0%, #ffc600 100%);\n  box-shadow: 10px 10px 15px 0px rgba(71, 71, 71, 0.2);\n  padding-bottom: 26px;\n  cursor: pointer;\n`;\n\nexport const StyledServicesUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 30px;\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  color: var(--light-color);\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.5;\n  display: inline-flex;\n  padding: 5px 10px;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  border-radius: 500px;\n  background: rgba(255, 255, 255, 0.1);\n  cursor: pointer;\n`;\n\nexport const StyledNavLink02 = styled(NavLink)`\n  display: inline-flex;\n  padding: 5px 10px;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  border-radius: 500px;\n  background: rgba(255, 255, 255, 0.5);\n  font-size: 14px;\n  line-height: 1.5;\n  font-weight: 400;\n  cursor: pointer;\n`;\n\nexport const StyledUl = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  row-gap: 10px;\n  margin-left: 16px;\n`;\n","  export const formatPhoneNumber = (input) => {\n    const numbersOnly = input.replace(/\\D/g, '');\n    const formattedNumber = '+380 ' + numbersOnly.trim();\n\n    if (input.split(' ')[0] === '+380') {\n      const numbersOnly = input.split(' ').slice(1).join('').replace(/\\D/g, '');\n\n      if (numbersOnly.length <= 12) {\n        let formattedPhoneNumber = '+380 ';\n\n        if (numbersOnly.length <= 3) {\n          formattedPhoneNumber += numbersOnly;\n        }\n\n        if (numbersOnly.length > 3 && numbersOnly.length < 6) {\n          formattedPhoneNumber +=\n            numbersOnly.slice(0, 3) + ' ' + numbersOnly.slice(3, 6);\n        }\n\n        if (numbersOnly.length >= 6 && numbersOnly.length < 8) {\n          formattedPhoneNumber +=\n            numbersOnly.slice(0, 3) +\n            ' ' +\n            numbersOnly.slice(3, 5) +\n            ' ' +\n            numbersOnly.slice(5, 7);\n        }\n        if (numbersOnly.length >= 8) {\n          formattedPhoneNumber +=\n            numbersOnly.slice(0, 3) +\n            ' ' +\n            numbersOnly.slice(3, 5) +\n            ' ' +\n            numbersOnly.slice(5, 7) +\n            ' ' +\n            numbersOnly.slice(7, 9);\n        }\n\n        return formattedPhoneNumber;\n      }\n      return;\n    }\n\n    return formattedNumber\n  };\n"],"names":["Error","_ref","children","_jsx","style","color","fontSize","textAlign","marginTop","marginBottom","toLowerCase","schema","yup","shape","name","required","number","min","checkbox","_useTranslation","useTranslation","t","_slicedToArray","_useState","useState","_useState2","formSubmitted","setFormSubmitted","StyledBackGroundImage","_jsxs","StyledContainer","StyledBgImg","src","bg","alt","loading","StyledDiv","StyledCircleDiv","StyledH2","StyledH3","Formik","initialValues","validationSchema","onSubmit","_ref2","resetForm","_ref3","setFieldValue","Form","StyledFormDiv","StyledLabel","htmlFor","StyledBorder","StyledSvg","width","height","href","concat","sprite","StyledField","id","placeholder","autoComplete","ErrorMessage","component","StyledBorderNumber","type","onChange","e","formattedNumber","formatPhoneNumber","target","value","onFocus","StyledSubmitDiv","StyledCheckboxLabel","StyledCheckboxField","StyledButton","StyledSubmittedButton","StyledSubmittedP","StyledSubmittedSpan","StyledFlexDiv","StyledLineDiv","StyledP","StyledLink","styled","_templateObject","_taggedTemplateLiteral","bg1x","bg2x","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","Field","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","fadeIn","keyframes","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","check","_templateObject19","_templateObject20","_templateObject21","_templateObject22","_templateObject23","StyledBgSvg","StyledSpan","StyledH4","StyledH402","StyledServicesDiv","StyledServicesDiv02","StyledServicesUl","StyledNavLink","NavLink","StyledNavLink02","StyledUl","input","replace","trim","split","numbersOnly","slice","join","length","formattedPhoneNumber"],"sourceRoot":""}