{"version":3,"file":"static/js/3774.e85ae6df.chunk.js","mappings":"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","sources":["components/CarServiceRepair/CarServiceRepairForm.jsx","components/CarServiceRepair/CarServiceRepairHero.jsx","components/Error.jsx","helpers/phoneUaInput.js","components/CarServiceRepair/CarServiceChassisRepairAbout.jsx","pages/CarServicePage/CarServiceChassisRepairPage/CarServiceChassisRepairPage.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Formik, ErrorMessage, Form } from 'formik';\nimport * as yup from 'yup';\nimport { formatPhoneNumber } from 'helpers/phoneUaInput';\nimport { Error } from 'components/Error';\nimport { StyledFormikDiv, StyledH3 } from './CarServiceRepair.styled';\nimport {\n  StyledFormDiv,\n  StyledLabel,\n  StyledField,\n  StyledSubmitDiv,\n  StyledButton,\n  StyledBorder,\n  StyledBorderNumber,\n  StyledSvg,\n  StyledCheckboxLabel,\n  StyledCheckboxField,\n  StyledSubmittedButton,\n  StyledSubmittedSpan,\n  StyledSubmittedP,\n} from '../SectionForm/SectionForm.styled';\nimport sprite from '../../images/sprite.svg';\n\nexport const schema = yup.object().shape({\n  name: yup.string().required('Please enter your name'),\n  number: yup\n    .string()\n    .min(10, 'Must be more than 10 characters')\n    .required(\"Please enter the phone's number\"),\n  checkbox: yup.boolean().required('Please check the checkbox to continue'),\n});\nexport const CarServiceRepairForm = () => {\n  const [t] = useTranslation();\n  const [formSubmitted, setFormSubmitted] = useState(false);\n  const handleSubmit = ({ name, number }, { resetForm }) => {\n    setFormSubmitted(true);\n    // console.log(name, number);\n    // sending data\n    resetForm();\n  };\n  return (\n    <StyledFormikDiv>\n      <StyledH3>{t('form.h3')}</StyledH3>\n      <Formik\n        initialValues={{ name: '', number: '', checkbox: false }}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        {({ setFieldValue }) => (\n          <Form>\n            <StyledFormDiv>\n              <StyledLabel htmlFor=\"name\">{t('form.labels.0')} </StyledLabel>\n              <StyledBorder></StyledBorder>\n              <StyledSvg width=\"22\" height=\"22\">\n                <use href={`${sprite}#icon-address-book`}></use>\n              </StyledSvg>\n              <StyledField\n                name=\"name\"\n                id=\"name\"\n                placeholder={t('form.placeholderName')}\n                autoComplete=\"off\"\n              />\n              <ErrorMessage name=\"name\" component={Error} />\n            </StyledFormDiv>\n\n            <StyledFormDiv>\n              <StyledLabel htmlFor=\"number\">{t('form.labels.1')}</StyledLabel>\n              <StyledBorderNumber></StyledBorderNumber>\n              <StyledSvg width=\"22\" height=\"22\">\n                <use href={`${sprite}#icon-call-yellow-outline`}></use>\n              </StyledSvg>\n              <StyledField\n                name=\"number\"\n                id=\"number\"\n                type=\"tel\"\n                placeholder=\"+380 XXX XX XX XX\"\n                autoComplete=\"off\"\n                onChange={e => {\n                  const formattedNumber = formatPhoneNumber(e.target.value);\n                  setFieldValue('number', formattedNumber);\n                }}\n                onFocus={e => {\n                  if (!e.target.value) {\n                    setFieldValue('number', '+380 ');\n                  }\n                }}\n              />\n              <ErrorMessage name=\"number\" component={Error} />\n            </StyledFormDiv>\n\n            <StyledSubmitDiv>\n              <StyledCheckboxLabel>\n                <StyledCheckboxField name=\"checkbox\" type=\"checkbox\" required />\n                <ErrorMessage name=\"checkbox\" component={Error} />\n                {t('form.checkboxText')}\n              </StyledCheckboxLabel>\n              {!formSubmitted && (\n                <StyledButton type=\"submit\">\n                  {t('header.buttonText')}\n                </StyledButton>\n              )}\n              {formSubmitted && (\n                <StyledSubmittedButton>\n                  <StyledSubmittedP>\n                    <StyledSubmittedSpan>\n                      {t('form.buttonSubmittedText.0')}\n                    </StyledSubmittedSpan>\n                    {t('form.buttonSubmittedText.1')}\n                  </StyledSubmittedP>\n                </StyledSubmittedButton>\n              )}\n            </StyledSubmitDiv>\n          </Form>\n        )}\n      </Formik>\n    </StyledFormikDiv>\n  );\n};\n","import { useTranslation } from 'react-i18next';\nimport { StyledContainer, StyledP } from 'components/Hero/Hero.styled';\nimport {\n  StyledButtonDiv,\n  StyledButtonP,\n  StyledCircleDiv,\n  StyledSvg,\n} from 'components/Header/Header.styled';\nimport sprite from '../../images/sprite.svg';\nimport { StyledH1 } from './CarServiceRepair.styled';\nimport { scrollToForm } from 'helpers/scrollToForm';\n\nexport const CarServiceRepairHero = ({ h1, p, style, Bg, maxWidth }) => {\n  const { t } = useTranslation();\n  return (\n    <section>\n      <Bg>\n        <StyledContainer>\n          <StyledH1 style={{ width: 'auto', maxWidth }}>{t(`${h1}`)}</StyledH1>\n          {p ? (\n            <>\n              <StyledP>{t(`${p}`)}</StyledP>\n              <StyledButtonDiv\n                style={{ margin: 0, justifyContent: 'normal', gap: '40px' }}\n                onClick={scrollToForm}\n              >\n                <StyledCircleDiv></StyledCircleDiv>\n                <StyledSvg width=\"18\" height=\"18\">\n                  <use href={`${sprite}#icon-tools`}></use>\n                </StyledSvg>\n                <StyledButtonP>{t('carService.buttonText')}</StyledButtonP>\n              </StyledButtonDiv>\n            </>\n          ) : (\n            <StyledButtonDiv style={style} onClick={scrollToForm}>\n              <StyledCircleDiv></StyledCircleDiv>\n              <StyledSvg width=\"18\" height=\"18\">\n                <use href={`${sprite}#icon-tools`}></use>\n              </StyledSvg>\n              <StyledButtonP>{t('carService.buttonText')}</StyledButtonP>\n            </StyledButtonDiv>\n          )}\n        </StyledContainer>\n      </Bg>\n    </section>\n  );\n};\n","export const Error = ({ children }) => {\n  return (\n    <div\n      style={{\n        color: 'red',\n        fontSize: 14,\n        textAlign: 'center',\n        marginTop: '-20px',\n        marginBottom: '10px',\n      }}\n    >\n      {children.toLowerCase()}\n    </div>\n  );\n};\n","  export const formatPhoneNumber = (input) => {\n    const numbersOnly = input.replace(/\\D/g, '');\n    const formattedNumber = '+380 ' + numbersOnly.trim();\n\n    if (input.split(' ')[0] === '+380') {\n      const numbersOnly = input.split(' ').slice(1).join('').replace(/\\D/g, '');\n\n      if (numbersOnly.length <= 12) {\n        let formattedPhoneNumber = '+380 ';\n\n        if (numbersOnly.length <= 3) {\n          formattedPhoneNumber += numbersOnly;\n        }\n\n        if (numbersOnly.length > 3 && numbersOnly.length < 6) {\n          formattedPhoneNumber +=\n            numbersOnly.slice(0, 3) + ' ' + numbersOnly.slice(3, 6);\n        }\n\n        if (numbersOnly.length >= 6 && numbersOnly.length < 8) {\n          formattedPhoneNumber +=\n            numbersOnly.slice(0, 3) +\n            ' ' +\n            numbersOnly.slice(3, 5) +\n            ' ' +\n            numbersOnly.slice(5, 7);\n        }\n        if (numbersOnly.length >= 8) {\n          formattedPhoneNumber +=\n            numbersOnly.slice(0, 3) +\n            ' ' +\n            numbersOnly.slice(3, 5) +\n            ' ' +\n            numbersOnly.slice(5, 7) +\n            ' ' +\n            numbersOnly.slice(7, 9);\n        }\n\n        return formattedPhoneNumber;\n      }\n      return;\n    }\n\n    return formattedNumber\n  };\n","import { lazy } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  StyledP,\n  StyledSpan,\n  StyledDiv,\n  StyledSvg,\n  StyledFlexDesktopDiv,\n  StyledGridUl,\n  StyledMarginDiv,\n  StyledPaddingContainerMore,\n} from './CarServiceRepair.styled';\nimport sprite from '../../images/sprite.svg';\nimport { CarServiceRepairForm } from './CarServiceRepairForm';\nconst CarServiceRepairPrice = lazy(() =>\n  import('components/CarServiceRepair/CarServiceRepairPrice')\n);\n\nexport const CarServiceChassisRepairAbout = () => {\n  const { t } = useTranslation();\n  return (\n    <section>\n      <StyledPaddingContainerMore>\n        <StyledFlexDesktopDiv style={{ gap: 0 }}>\n          <CarServiceRepairForm />\n          <StyledMarginDiv>\n            <StyledP>\n              {t('chassisRepair.p.0')} <br />\n              <StyledSpan>{t('chassisRepair.p.1')}</StyledSpan>\n            </StyledP>\n            <StyledGridUl>\n              <li>\n                <StyledDiv>\n                  <StyledSvg width=\"30\" height=\"30\">\n                    <use href={`${sprite}#icon-check-yellow`}></use>\n                  </StyledSvg>\n                  <StyledP>{t('chassisRepair.list.0')}</StyledP>\n                </StyledDiv>\n              </li>\n              <li>\n                <StyledDiv>\n                  <StyledSvg width=\"30\" height=\"30\">\n                    <use href={`${sprite}#icon-check-yellow`}></use>\n                  </StyledSvg>\n                  <StyledP>{t('chassisRepair.list.1')}</StyledP>\n                </StyledDiv>\n              </li>\n              <li>\n                <StyledDiv>\n                  <StyledSvg width=\"30\" height=\"30\">\n                    <use href={`${sprite}#icon-check-yellow`}></use>\n                  </StyledSvg>\n                  <StyledP>{t('chassisRepair.list.2')}</StyledP>\n                </StyledDiv>\n              </li>\n              <li>\n                <StyledDiv>\n                  <StyledSvg width=\"30\" height=\"30\">\n                    <use href={`${sprite}#icon-check-yellow`}></use>\n                  </StyledSvg>\n                  <StyledP>{t('chassisRepair.list.3')}</StyledP>\n                </StyledDiv>\n              </li>\n              <li>\n                <StyledDiv>\n                  <StyledSvg width=\"30\" height=\"30\">\n                    <use href={`${sprite}#icon-check-yellow`}></use>\n                  </StyledSvg>\n                  <StyledP>{t('chassisRepair.list.4')}</StyledP>\n                </StyledDiv>\n              </li>\n              <li>\n                <StyledDiv>\n                  <StyledSvg width=\"30\" height=\"30\">\n                    <use href={`${sprite}#icon-check-yellow`}></use>\n                  </StyledSvg>\n                  <StyledP>{t('chassisRepair.list.5')}</StyledP>\n                </StyledDiv>\n              </li>\n            </StyledGridUl>\n            <StyledP>{t('chassisRepair.paragraph.0')}</StyledP>\n            <StyledP>{t('chassisRepair.paragraph.1')}</StyledP>\n            <StyledP>{t('chassisRepair.paragraph.2')}</StyledP>\n            <StyledP>{t('chassisRepair.paragraph.3')}</StyledP>\n            <StyledP>{t('chassisRepair.paragraph.4')}</StyledP>\n            <StyledP>{t('chassisRepair.paragraph.5')}</StyledP>\n            <StyledP>{t('chassisRepair.paragraph.6')}</StyledP>\n          </StyledMarginDiv>\n          <CarServiceRepairPrice\n            h2={'chassisRepair.h2'}\n            list={'chassisRepair.serviceList'}\n            price={'chassisRepair.priceList'}\n          />\n        </StyledFlexDesktopDiv>\n      </StyledPaddingContainerMore>\n    </section>\n  );\n};\n","import { lazy } from 'react';\nimport styled from 'styled-components';\nimport bg1x from 'images/desktop/backgrounds/services/chassis-bg@1x-min.jpg';\nimport bg2x from 'images/desktop/backgrounds/services/chassis-bg@2x-min.jpg';\nimport { CarServiceRepairHero } from 'components/CarServiceRepair/CarServiceRepairHero';\nimport { CarServiceChassisRepairAbout } from 'components/CarServiceRepair/CarServiceChassisRepairAbout';\n\nconst SectionFeedbacks = lazy(() =>\n  import('components/SectionFeedbacks/SectionFeedbacks')\n);\nconst SectionCertifications = lazy(() =>\n  import('components/SectionCertifications/SectionCertifications')\n);\nconst SectionForm = lazy(() => import('components/SectionForm/SectionForm'));\nconst SectionBlog = lazy(() => import('components/SectionBlog/SectionBlog'));\nconst SectionContacts = lazy(() =>\n  import('components//SectionContacts/SectionContacts')\n);\n\nconst style = {\n  margin: 0,\n  justifyContent: 'normal',\n  gap: '40px',\n  marginTop: '40px',\n};\n\nconst StyledBackGroundImage = styled.div`\n  background-image: url(${bg1x});\n  background-repeat: no-repeat;\n  background-size: cover;\n  height: 470px;\n  position: relative;\n  top: -60px;\n  left: 0;\n  right: 0;\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url(${bg2x});\n  }\n  @media screen and (min-width: 1512px) {\n    top: -80px;\n    left: 0;\n    right: 0;\n  }\n`;\n\nconst CarServiceChassisRepairPage = () => {\n  return (\n    <>\n      <CarServiceRepairHero\n        h1={'footer.carServiceList.2'}\n        style={style}\n        Bg={StyledBackGroundImage}\n      />\n      <CarServiceChassisRepairAbout />\n      <SectionFeedbacks />\n      <SectionCertifications />\n      <SectionForm />\n      <SectionBlog />\n      <SectionContacts />\n    </>\n  );\n};\n\nexport default CarServiceChassisRepairPage;\n"],"names":["schema","yup","shape","name","required","number","min","checkbox","CarServiceRepairForm","_useTranslation","useTranslation","t","_slicedToArray","_useState","useState","_useState2","formSubmitted","setFormSubmitted","_jsxs","StyledFormikDiv","children","_jsx","StyledH3","Formik","initialValues","validationSchema","onSubmit","_ref","_ref2","resetForm","_ref3","setFieldValue","Form","StyledFormDiv","StyledLabel","htmlFor","StyledBorder","StyledSvg","width","height","href","concat","sprite","StyledField","id","placeholder","autoComplete","ErrorMessage","component","Error","StyledBorderNumber","type","onChange","e","formattedNumber","formatPhoneNumber","target","value","onFocus","StyledSubmitDiv","StyledCheckboxLabel","StyledCheckboxField","StyledButton","StyledSubmittedButton","StyledSubmittedP","StyledSubmittedSpan","CarServiceRepairHero","h1","p","style","Bg","maxWidth","StyledContainer","StyledH1","_Fragment","StyledP","StyledButtonDiv","margin","justifyContent","gap","onClick","scrollToForm","StyledCircleDiv","StyledButtonP","color","fontSize","textAlign","marginTop","marginBottom","toLowerCase","input","replace","trim","split","numbersOnly","slice","join","length","formattedPhoneNumber","CarServiceRepairPrice","lazy","CarServiceChassisRepairAbout","StyledPaddingContainerMore","StyledFlexDesktopDiv","StyledMarginDiv","StyledSpan","StyledGridUl","StyledDiv","h2","list","price","SectionFeedbacks","SectionCertifications","SectionForm","SectionBlog","SectionContacts","StyledBackGroundImage","styled","_templateObject","_taggedTemplateLiteral","bg1x","bg2x"],"sourceRoot":""}