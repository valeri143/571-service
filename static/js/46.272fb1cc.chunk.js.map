{"version":3,"file":"static/js/46.272fb1cc.chunk.js","mappings":"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","sources":["components/CarServiceRepair/CarServiceRepair.styled.jsx","components/CarServiceRepair/CarServiceRepairForm.jsx","components/Error.jsx","components/Hero/Hero.styled.jsx","images/checkbox.svg","components/SectionForm/SectionForm.styled.jsx","helpers/phoneUaInput.js"],"sourcesContent":["import styled from 'styled-components';\nimport bg1x from '../../images/mobile/backgrounds/engine-repair-background@1x-min.jpg';\nimport bg2x from '../../images/mobile/backgrounds/engine-repair-background@2x-min.jpg';\n\nexport const StyledBackGroundImage = styled.div`\n  background-image: url(${bg1x});\n  background-repeat: no-repeat;\n  background-size: cover;\n  width: 100vw;\n  position: relative;\n  top: -60px;\n  left: 0;\n  right: 0;\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url(${bg2x});\n  }\n`;\n\nexport const StyledContainer = styled.div`\n  padding: 0px 15px 80px 15px;\n  margin: 0 auto;\n  box-sizing: border-box;\n  outline: solid tomato;\n  position: relative;\n  text-align: left;\n  @media screen and (min-width: 390px) {\n    width: 390px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 768px;\n  }\n  @media screen and (min-width: 1512px) {\n    width: 1512px;\n    padding: 80px 156px 150px 156px;\n  }\n`;\n\nexport const StyledP = styled.p`\n  font-size: 16px;\n  line-height: 1.5;\n  width: 355px;\n  margin-bottom: 10px;\n`;\n\nexport const StyledSpan = styled.span`\n  font-weight: 700;\n`;\n\nexport const StyledUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 10px;\n  margin-bottom: 20px;\n  margin-top: 23px;\n`;\n\nexport const StyledDiv = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n\nexport const StyledSvg = styled.svg`\n  margin-top: -3px;\n`;\n\nexport const StyledFormikDiv = styled.div`\n  padding-top: 50px;\n  padding-bottom: 50px;\n  max-width: 360px;\n  max-height: 470px;\n  border-radius: 8px;\n  background: var(--primary-color);\n`;\n\nexport const StyledH2 = styled.h2`\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 1.2;\n  margin-bottom: 10px;\n`;\n\nexport const StyledPriceSpan = styled.span`\n  color: #222;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 30px;\n`;\n\nexport const StyledTable = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n`;\n\nexport const ServiceHeader = styled.th`\n  padding-left: 15px;\n  padding-bottom: 10px;\n  color: #222;\n  line-height: 1.7;\n  text-align: left;\n  font-weight: 400;\n`;\n\nexport const PriceHeader = styled.th`\n  padding-right: 15px;\n  padding-bottom: 10px;\n  color: #222;\n  line-height: 1.7;\n  text-align: right;\n  font-weight: 400;\n`;\n\nexport const StyledTr = styled.tr`\n  background: var(--light-color);\n`;\nexport const ServiceCell = styled.td`\n  padding-left: 15px;\n  padding-top: 17px;\n  width: 64%;\n  padding-bottom: 17px;\n  text-align: left;\n  color: #222;\n  font-size: 16px;\n  font-weight: 300;\n  line-height: 1.1;\n`;\n\nexport const PriceCell = styled.td`\n  padding-right: 10px;\n  padding-top: 17px;\n  padding-bottom: 17px;\n  text-align: right;\n  color: #222;\n  font-size: 16px;\n  font-weight: 300;\n  line-height: 1.1;\n`;\n","import { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Formik, ErrorMessage, Form } from 'formik';\nimport * as yup from 'yup';\nimport { formatPhoneNumber } from 'helpers/phoneUaInput';\nimport { Error } from 'components/Error';\nimport { StyledContainer, StyledFormikDiv } from './CarServiceRepair.styled';\nimport {\n  StyledH3,\n  StyledFormDiv,\n  StyledLabel,\n  StyledField,\n  StyledSubmitDiv,\n  StyledButton,\n  StyledBorder,\n  StyledBorderNumber,\n  StyledSvg,\n  StyledCheckboxLabel,\n  StyledCheckboxField,\n  StyledSubmittedButton,\n  StyledSubmittedSpan,\n  StyledSubmittedP,\n} from '../SectionForm/SectionForm.styled';\nimport sprite from '../../images/sprite.svg';\n\nexport const schema = yup.object().shape({\n  name: yup.string().required('Please enter your name'),\n  number: yup\n    .string()\n    .min(10, 'Must be more than 10 characters')\n    .required(\"Please enter the phone's number\"),\n  checkbox: yup.boolean().required('Please check the checkbox to continue'),\n});\n\nexport const CarServiceRepairForm = () => {\n  const [t] = useTranslation();\n  const [formSubmitted, setFormSubmitted] = useState(false);\n  const handleSubmit = ({ name, number }, { resetForm }) => {\n    setFormSubmitted(true);\n    // console.log(name, number);\n    // sending data\n    resetForm();\n  };\n  return (\n    <section>\n      <StyledContainer>\n        <h2 hidden>Form</h2>\n        <StyledFormikDiv>\n          <StyledH3>{t('form.h3')}</StyledH3>\n          <Formik\n            initialValues={{ name: '', number: '', checkbox: false }}\n            validationSchema={schema}\n            onSubmit={handleSubmit}\n          >\n            {({ setFieldValue }) => (\n              <Form>\n                <StyledFormDiv>\n                  <StyledLabel htmlFor=\"name\">\n                    {t('form.labels.0')}{' '}\n                  </StyledLabel>\n                  <StyledBorder></StyledBorder>\n                  <StyledSvg width=\"22\" height=\"22\">\n                    <use href={`${sprite}#icon-address-book`}></use>\n                  </StyledSvg>\n                  <StyledField\n                    name=\"name\"\n                    id=\"name\"\n                    placeholder={t('form.placeholderName')}\n                    autoComplete=\"off\"\n                  />\n                  <ErrorMessage name=\"name\" component={Error} />\n                </StyledFormDiv>\n\n                <StyledFormDiv>\n                  <StyledLabel htmlFor=\"number\">\n                    {t('form.labels.1')}\n                  </StyledLabel>\n                  <StyledBorderNumber></StyledBorderNumber>\n                  <StyledSvg width=\"22\" height=\"22\">\n                    <use href={`${sprite}#icon-call-yellow-outline`}></use>\n                  </StyledSvg>\n                  <StyledField\n                    name=\"number\"\n                    id=\"number\"\n                    type=\"tel\"\n                    placeholder=\"+380 XXX XX XX XX\"\n                    autoComplete=\"off\"\n                    onChange={e => {\n                      const formattedNumber = formatPhoneNumber(e.target.value);\n                      setFieldValue('number', formattedNumber);\n                    }}\n                    onFocus={e => {\n                      if (!e.target.value) {\n                        setFieldValue('number', '+380 ');\n                      }\n                    }}\n                  />\n                  <ErrorMessage name=\"number\" component={Error} />\n                </StyledFormDiv>\n\n                <StyledSubmitDiv>\n                  <StyledCheckboxLabel>\n                    <StyledCheckboxField\n                      name=\"checkbox\"\n                      type=\"checkbox\"\n                      required\n                    />\n                    <ErrorMessage name=\"checkbox\" component={Error} />\n                    {t('form.checkboxText')}\n                  </StyledCheckboxLabel>\n                  {!formSubmitted && (\n                    <StyledButton type=\"submit\">\n                      {t('header.buttonText')}\n                    </StyledButton>\n                  )}\n                  {formSubmitted && (\n                    <StyledSubmittedButton>\n                      <StyledSubmittedP>\n                        <StyledSubmittedSpan>\n                          {t('form.buttonSubmittedText.0')}\n                        </StyledSubmittedSpan>\n                        {t('form.buttonSubmittedText.1')}\n                      </StyledSubmittedP>\n                    </StyledSubmittedButton>\n                  )}\n                </StyledSubmitDiv>\n              </Form>\n            )}\n          </Formik>\n        </StyledFormikDiv>\n      </StyledContainer>\n    </section>\n  );\n};\n","export const Error = ({ children }) => {\n  return (\n    <div\n      style={{\n        color: 'red',\n        fontSize: 14,\n        textAlign: 'center',\n        marginTop: '-20px',\n        marginBottom: '10px',\n      }}\n    >\n      {children.toLowerCase()}\n    </div>\n  );\n};\n","import styled from 'styled-components';\nimport bg1x from '../../images/mobile/backgrounds/bg@1x-min.jpg';\nimport bg2x from '../../images/mobile/backgrounds/bg@2x-min.jpg';\n\nexport const StyledBackGroundImage = styled.div`\n  background-image: url(${bg1x});\n  background-repeat: no-repeat;\n  background-size: cover;\n  width: 100vw;\n  height: 1301px;\n  position: relative;\n  top: -60px;\n  left: 0;\n  right: 0;\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url(${bg2x});\n  }\n`;\n\nexport const StyledContainer = styled.div`\n  padding: 50px 15px 80px 15px;\n  margin: 0 auto;\n  box-sizing: border-box;\n  outline: solid tomato;\n  position: relative;\n  text-align: left;\n  @media screen and (min-width: 390px) {\n    width: 390px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 768px;\n  }\n  @media screen and (min-width: 1512px) {\n    width: 1512px;\n    padding: 100px 156px 150px 156px;\n  }\n`;\n\nexport const StyledH1 = styled.h1`\n  width: 300px;\n  color: var(--light-color);\n  font-size: 30px;\n  font-weight: 700;\n  text-transform: uppercase;\n  line-height: 1.2;\n  margin-bottom: 10px;\n  margin-top: 60px;\n`;\n\nexport const StyledSpan = styled.span`\n  color: var(--accent-color);\n  font-size: 30px;\n  font-weight: 700;\n  line-height: 1.2;\n  text-transform: uppercase;\n`;\n\nexport const StyledP = styled.p`\n  width: 360px;\n  font-size: 16px;\n  color: var(--light-color);\n  line-height: 1.5;\n  margin-bottom: 20px;\n`;\n\nexport const StyledAnimationUl = styled.ul`\n  margin-top: 50px;\n  position: relative;\n`;\n\nexport const StyledAnimationDiv01 = styled.div`\n  position: absolute;\n  left: 56px;\n  display: inline-flex;\n  transform: rotate(-4.023deg);\n  padding: 11px 16px;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  border-radius: 500px;\n  border: 1px solid var(--accent-color);\n  background: rgba(255, 255, 255, 0.1);\n`;\n\nexport const StyledAnimationDiv02 = styled.div`\n  position: absolute;\n  top: 25px;\n  right: 10px;\n  display: inline-flex;\n  padding: 11px 16px;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  border-radius: 500px;\n  border: 1px solid var(--accent-color);\n  background: rgba(255, 255, 255, 0.1);\n`;\n\nexport const StyledAnimationDiv03 = styled.div`\n  position: absolute;\n  top: 85px;\n  display: inline-flex;\n  transform: rotate(8.017deg);\n  padding: 11px 16px;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  border-radius: 500px;\n  border: 1px solid var(--accent-color);\n  background: rgba(255, 255, 255, 0.1);\n`;\n\nexport const StyledAnimationP = styled.p`\n  color: var(--light-color);\n  line-height: 1.5;\n`;\n\nexport const StyledImg = styled.img`\n  position: absolute;\n  bottom: 395px;\n  right: 0;\n`;\n\nexport const StyledBenefitsUl = styled.ul`\n  display: flex;\n  gap: 20px;\n  flex-direction: column;\n  justify-content: center;\n  margin-top: 456px;\n  align-items: center;\n`;\nexport const StyledBenefitsDiv = styled.div`\n  max-width: 320px;\n  display: flex;\n  align-items: center;\n  padding-left: 43px;\n  gap: 17px;\n  height: 95px;\n  border-radius: 8px;\n  background: var(--light-color);\n  box-shadow: 0px 0px 60px 0px rgba(129, 129, 129, 0.15);\n`;\n\nexport const StyledBenefitsDiv01 = styled.div`\n  max-width: 327px;\n  display: flex;\n  align-items: center;\n  padding-left: 35px;\n  gap: 16px;\n  height: 95px;\n  border-radius: 8px;\n  background: var(--light-color);\n  box-shadow: 0px 0px 60px 0px rgba(129, 129, 129, 0.15);\n`;\nexport const StyledBenefitsDiv02 = styled.div`\n  max-width: 302px;\n  display: flex;\n  align-items: center;\n  padding-left: 59px;\n  justify-content: center;\n  gap: 20px;\n  height: 95px;\n  border-radius: 8px;\n  background: var(--light-color);\n  box-shadow: 0px 0px 60px 0px rgba(129, 129, 129, 0.15);\n`;\n\nexport const StyledNumP = styled.p`\n  color: var(--accent-color);\n  font-size: 40px;\n  line-height: 1.2;\n  text-transform: uppercase;\n  @media screen and (min-width: 360px) {\n    margin-right: 35px;\n  }\n`;\nexport const StyledNumP01 = styled.p`\n  color: var(--accent-color);\n  font-size: 40px;\n  line-height: 1.2;\n  text-transform: uppercase;\n`;\n\nexport const StyledBenefitsP = styled.p`\n  line-height: 1.5;\n  max-width: 165px;\n`;\n\nexport const StyledLineDiv = styled.div`\n  width: 2px;\n  height: 60px;\n  background-color: var(--grey-color);\n`;\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgCheckbox(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 8,\n    viewBox: \"0 0 12 8\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector 29\",\n    d: \"M1 4L4.33333 7L11 1\",\n    stroke: \"#FDC70D\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCheckbox);\nexport default __webpack_public_path__ + \"static/media/checkbox.1f4f874464e9a5df5d503a994299a7d7.svg\";\nexport { ForwardRef as ReactComponent };","import styled, { keyframes } from 'styled-components';\nimport { Field } from 'formik';\nimport bg1x from '../../images/mobile/backgrounds/form-background@1x-min.jpg';\nimport bg2x from '../../images/mobile/backgrounds/form-background@2x-min.jpg';\nimport check from '../../images/checkbox.svg';\n\nexport const StyledBackGroundImage = styled.div`\n  background-image: url(${bg1x});\n  background-repeat: no-repeat;\n  background-size: cover;\n  width: 100vw;\n  height: 645px;\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url(${bg2x});\n  }\n`;\n\nexport const StyledBgImg = styled.img`\n  position: absolute;\n  right: 0;\n  top: -240px;\n`;\n\nexport const StyledDiv = styled.div`\n  position: absolute;\n  z-index: 2;\n  top: 49px;\n  right: 38px;\n  display: flex;\n  flex-direction: row-reverse;\n  align-items: center;\n  gap: 10px;\n`;\n\nexport const StyledH2 = styled.h2`\n  color: rgba(255, 255, 255, 0.8);\n  text-align: right;\n  font-size: 12px;\n  line-height: 1.5;\n  opacity: 0.5;\n`;\n\nexport const StyledH3 = styled.h3`\n  width: 248px;\n  color: var(--light-color);\n  text-align: center;\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 1.2;\n  text-transform: uppercase;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 32px;\n`;\n\nexport const StyledFormDiv = styled.div`\n  position: relative;\n`;\n\nexport const StyledField = styled(Field)`\n  max-width: 270px;\n  height: 60px;\n  border-radius: 500px;\n  border: 1px solid #dadada;\n  padding-left: 53px;\n  padding-right: 5px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 32px;\n  display: block;\n  background: transparent;\n  color: var(--grey-color);\n  font-size: 16px;\n  line-height: 1.5;\n  &::placeholder {\n    opacity: 0.2;\n  }\n  &:focus,\n  &:active,\n  &:focus-visible {\n    outline: 0px solid #dadada;\n  }\n  @media screen and (min-width: 350px) {\n    width: 270px;\n  }\n`;\n\nexport const StyledLabel = styled.label`\n  color: var(--light-color);\n  font-size: 16px;\n  line-height: 1.5;\n  position: absolute;\n  z-index: 9;\n  left: 48px;\n  top: -12px;\n`;\n\nexport const StyledBorder = styled.div`\n  background-color: var(--primary-color);\n  height: 1px;\n  width: 85px;\n  position: absolute;\n  z-index: 5;\n  left: 42px;\n  top: 0;\n`;\n\nexport const StyledBorderNumber = styled.div`\n  background-color: var(--primary-color);\n  height: 2px;\n  width: 138px;\n  position: absolute;\n  z-index: 5;\n  left: 42px;\n  top: 0;\n`;\n\nexport const StyledSvg = styled.svg`\n  position: absolute;\n  top: 20px;\n  left: 36px;\n`;\n\nexport const StyledSubmitDiv = styled.div`\n  display: flex;\n  flex-direction: column-reverse;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const StyledButton = styled.button`\n  display: flex;\n  max-width: 330px;\n  height: 60px;\n  justify-content: center;\n  align-items: center;\n  color: var(--light-color);\n  text-align: center;\n  font-weight: 500;\n  line-height: 1.5;\n  text-transform: uppercase;\n  background: linear-gradient(95deg, #fdc70d 0%, #fdab0d 100%);\n  box-shadow: 0px 24px 50px -20px #fdab0d;\n  border-radius: 500px;\n  @media screen and (min-width: 350px) {\n    width: 330px;\n  }\n`;\n\nconst fadeIn = keyframes`\n0% {\n  opacity: 0;\n}\n50% {\n  opacity: 0.2;\n}\n100% {\n  opacity: 1;\n}\n`;\n\nexport const StyledSubmittedButton = styled.div`\n  display: flex;\n  max-width: 330px;\n  height: 60px;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  background-color: rgba(49, 176, 4, 1);\n  border-radius: 500px;\n  animation: ${fadeIn} 500ms var(--animation-cubic);\n  @media screen and (min-width: 350px) {\n    width: 330px;\n  }\n`;\n\nexport const StyledSubmittedSpan = styled.span`\n  color: var(--light-color);\n  line-height: 1.5;\n  font-size: 18px;\n  font-weight: 500;\n  text-transform: uppercase;\n`;\n\nexport const StyledSubmittedP = styled.p`\n  display: flex;\n  flex-direction: column;\n  color: var(--light-color);\n  font-size: 14px;\n  line-height: 1.5;\n`;\n\nexport const StyledCheckboxField = styled(Field)`\n  appearance: none;\n  width: 18px;\n  height: 18px;\n  border-radius: 4px;\n  border: 1px solid #dadada;\n  background: var(--background-color);\n  &:checked {\n    background-image: url(${check});\n    background-repeat: no-repeat;\n    background-position: center;\n  }\n`;\n\nexport const StyledCheckboxLabel = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  color: var(--grey-color);\n  font-size: 12px;\n  font-weight: 300;\n  line-height: 1.5;\n`;\n\nexport const StyledFlexDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n`;\n\nexport const StyledLineDiv = styled.div`\n  width: 2px;\n  height: 74px;\n  border-radius: 3px;\n  background: var(--accent-color);\n`;\n\nexport const StyledP = styled.p`\n  color: var(--light-color);\n  line-height: 1.5;\n`;\nexport const StyledLink = styled.a`\n  color: var(--accent-color);\n  font-size: 30px;\n  line-height: 1.5;\n`;\n","  export const formatPhoneNumber = (input) => {\n    const numbersOnly = input.replace(/\\D/g, '');\n    const formattedNumber = '+380 ' + numbersOnly.trim();\n\n    if (input.split(' ')[0] === '+380') {\n      const numbersOnly = input.split(' ').slice(1).join('').replace(/\\D/g, '');\n\n      if (numbersOnly.length <= 12) {\n        let formattedPhoneNumber = '+380 ';\n\n        if (numbersOnly.length <= 3) {\n          formattedPhoneNumber += numbersOnly;\n        }\n\n        if (numbersOnly.length > 3 && numbersOnly.length < 6) {\n          formattedPhoneNumber +=\n            numbersOnly.slice(0, 3) + ' ' + numbersOnly.slice(3, 6);\n        }\n\n        if (numbersOnly.length >= 6 && numbersOnly.length < 8) {\n          formattedPhoneNumber +=\n            numbersOnly.slice(0, 3) +\n            ' ' +\n            numbersOnly.slice(3, 5) +\n            ' ' +\n            numbersOnly.slice(5, 7);\n        }\n        if (numbersOnly.length >= 8) {\n          formattedPhoneNumber +=\n            numbersOnly.slice(0, 3) +\n            ' ' +\n            numbersOnly.slice(3, 5) +\n            ' ' +\n            numbersOnly.slice(5, 7) +\n            ' ' +\n            numbersOnly.slice(7, 9);\n        }\n\n        return formattedPhoneNumber;\n      }\n      return;\n    }\n\n    return formattedNumber\n  };\n"],"names":["StyledBackGroundImage","styled","_templateObject","_taggedTemplateLiteral","bg1x","bg2x","StyledContainer","_templateObject2","StyledP","_templateObject3","StyledSpan","_templateObject4","StyledUl","_templateObject5","StyledDiv","_templateObject6","StyledSvg","_templateObject7","StyledFormikDiv","_templateObject8","StyledH2","_templateObject9","StyledPriceSpan","_templateObject10","StyledTable","_templateObject11","ServiceHeader","_templateObject12","PriceHeader","_templateObject13","StyledTr","_templateObject14","ServiceCell","_templateObject15","PriceCell","_templateObject16","schema","yup","shape","name","required","number","min","checkbox","CarServiceRepairForm","_useTranslation","useTranslation","t","_slicedToArray","_useState","useState","_useState2","formSubmitted","setFormSubmitted","_jsx","children","_jsxs","hidden","StyledH3","Formik","initialValues","validationSchema","onSubmit","_ref","_ref2","resetForm","_ref3","setFieldValue","Form","StyledFormDiv","StyledLabel","htmlFor","StyledBorder","width","height","href","concat","sprite","StyledField","id","placeholder","autoComplete","ErrorMessage","component","Error","StyledBorderNumber","type","onChange","e","formattedNumber","formatPhoneNumber","target","value","onFocus","StyledSubmitDiv","StyledCheckboxLabel","StyledCheckboxField","StyledButton","StyledSubmittedButton","StyledSubmittedP","StyledSubmittedSpan","style","color","fontSize","textAlign","marginTop","marginBottom","toLowerCase","StyledH1","StyledAnimationUl","StyledAnimationDiv01","StyledAnimationDiv02","StyledAnimationDiv03","StyledAnimationP","StyledImg","StyledBenefitsUl","StyledBenefitsDiv","StyledBenefitsDiv01","StyledBenefitsDiv02","StyledNumP","StyledNumP01","_templateObject17","StyledBenefitsP","_templateObject18","StyledLineDiv","_templateObject19","StyledBgImg","Field","fadeIn","keyframes","check","StyledFlexDiv","_templateObject20","_templateObject21","_templateObject22","StyledLink","_templateObject23","input","replace","trim","split","numbersOnly","slice","join","length","formattedPhoneNumber"],"sourceRoot":""}