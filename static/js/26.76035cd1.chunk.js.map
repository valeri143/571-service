{"version":3,"file":"static/js/26.76035cd1.chunk.js","mappings":"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","sources":["components/CarServiceRepair/CarServiceRepairForm.jsx","components/Error.jsx","components/SectionContacts/SectionContacts.styled.jsx","helpers/phoneUaInput.js","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Formik, ErrorMessage, Form } from 'formik';\nimport * as yup from 'yup';\nimport { phoneInputHandler } from 'helpers/phoneUaInput';\nimport { Error } from 'components/Error';\nimport { StyledFormikDiv, StyledH3 } from './CarServiceRepair.styled';\nimport {\n  StyledFormDiv,\n  StyledLabel,\n  StyledField,\n  StyledSubmitDiv,\n  StyledButton,\n  StyledBorder,\n  StyledBorderNumber,\n  StyledSvg,\n  StyledCheckboxLabel,\n  StyledCheckboxField,\n  StyledSubmittedButton,\n  StyledSubmittedSpan,\n  StyledSubmittedP,\n} from '../SectionForm/SectionForm.styled';\nimport sprite from '../../images/sprite.svg';\n\nexport const schema = yup.object().shape({\n  name: yup.string().required('Please enter your name'),\n  number: yup\n    .string()\n    .min(10, 'Must be more than 10 characters')\n    .required(\"Please enter the phone's number\"),\n  checkbox: yup.boolean().required('Please check the checkbox to continue'),\n});\nexport const CarServiceRepairForm = () => {\n  const [t] = useTranslation();\n  const [formSubmitted, setFormSubmitted] = useState(false);\n  const handleSubmit = ({ name, number }, { resetForm }) => {\n    setFormSubmitted(true);\n    // console.log(name, number);\n    // sending data\n    resetForm();\n  };\n  return (\n    <StyledFormikDiv>\n      <StyledH3>{t('form.h3')}</StyledH3>\n      <Formik\n        initialValues={{ name: '', number: '', checkbox: false }}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        {({ setFieldValue }) => (\n          <Form>\n            <StyledFormDiv>\n              <StyledLabel htmlFor=\"name\">{t('form.labels.0')} </StyledLabel>\n              <StyledBorder></StyledBorder>\n              <StyledSvg width=\"22\" height=\"22\">\n                <use href={`${sprite}#icon-address-book`}></use>\n              </StyledSvg>\n              <StyledField\n                name=\"name\"\n                id=\"name\"\n                placeholder={t('form.placeholderName')}\n                autoComplete=\"off\"\n              />\n              <ErrorMessage name=\"name\" component={Error} />\n            </StyledFormDiv>\n\n            <StyledFormDiv>\n              <StyledLabel htmlFor=\"number\">{t('form.labels.1')}</StyledLabel>\n              <StyledBorderNumber></StyledBorderNumber>\n              <StyledSvg width=\"22\" height=\"22\">\n                <use href={`${sprite}#icon-call-yellow-outline`}></use>\n              </StyledSvg>\n              <StyledField\n                name=\"number\"\n                id=\"number\"\n                type=\"tel\"\n                placeholder=\"+38 XXX ХXX XX XX\"\n                autoComplete=\"off\"\n                onClick={phoneInputHandler}\n              />\n              <ErrorMessage name=\"number\" component={Error} />\n            </StyledFormDiv>\n\n            <StyledSubmitDiv>\n              <StyledCheckboxLabel>\n                <StyledCheckboxField name=\"checkbox\" type=\"checkbox\" required />\n                <ErrorMessage name=\"checkbox\" component={Error} />\n                {t('form.checkboxText')}\n              </StyledCheckboxLabel>\n              {!formSubmitted && (\n                <StyledButton type=\"submit\">\n                  {t('header.buttonText')}\n                </StyledButton>\n              )}\n              {formSubmitted && (\n                <StyledSubmittedButton>\n                  <StyledSubmittedP>\n                    <StyledSubmittedSpan>\n                      {t('form.buttonSubmittedText.0')}\n                    </StyledSubmittedSpan>\n                    {t('form.buttonSubmittedText.1')}\n                  </StyledSubmittedP>\n                </StyledSubmittedButton>\n              )}\n            </StyledSubmitDiv>\n          </Form>\n        )}\n      </Formik>\n    </StyledFormikDiv>\n  );\n};\n","export const Error = ({ children }) => {\n  return (\n    <div\n      style={{\n        color: 'red',\n        fontSize: 14,\n        textAlign: 'center',\n        marginTop: '-20px',\n        marginBottom: '10px',\n      }}\n    >\n      {children.toLowerCase()}\n    </div>\n  );\n};\n","import styled from 'styled-components';\nexport const StyledH3 = styled.h3`\n  max-width: 266px;\n  margin: 0 auto;\n  text-align: center;\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 1.2;\n  text-transform: uppercase;\n  position: relative;\n  z-index: 2;\n  margin-bottom: 20px;\n  @media screen and (min-width: 1512px) {\n    font-size: 38px;\n    max-width: 788px;\n    padding-bottom: 190px;\n  }\n`;\n\nexport const StyledContactsUl = styled.ul`\n  margin-top: 80px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    gap: 15px;\n  }\n  @media screen and (min-width: 1512px) {\n    gap: 20px;\n    position: absolute;\n    bottom: -60px;\n    z-index: 10;\n  }\n`;\n\nexport const StyledOrderLi = styled.li`\n  @media screen and (min-width: 1512px) {\n    order: -1;\n  }\n`;\n\nexport const StyledContactsDiv = styled.div`\n  min-width: 320px;\n  height: 170px;\n  max-height: 234px;\n  padding-top: 60px;\n  position: relative;\n  text-align: center;\n  border-radius: 8px 8px 0px 0px;\n  background: var(--light-color);\n  box-shadow: 0px 0px 60px 0px rgba(129, 129, 129, 0.15);\n  cursor: pointer;\n  @media screen and (min-width: 390px) {\n    width: 390px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 360px;\n  }\n  @media screen and (min-width: 1512px) {\n    width: 386px;\n    max-height: 100px;\n  }\n`;\n\nexport const StyledContactsSvg = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: -100px;\n  margin-bottom: 20px;\n  width: 80px;\n  height: 80px;\n  background: linear-gradient(95deg, #fdc70d 0%, #fdab0d 100%);\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  @media screen and (min-width: 1512px) {\n    transition: scale 250ms var(--animation-cubic);\n    ${StyledContactsDiv}:hover & {\n      scale: 1.2;\n    }\n  }\n`;\n\nexport const StyledContactsP = styled.p`\n  text-align: center;\n  font-size: 12px;\n  line-height: 1.5;\n  opacity: 0.5;\n`;\n\nexport const StyledLink = styled.a`\n  width: 276px;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  line-height: 1.5;\n  @media screen and (min-width: 1512px) {\n    transition: color 250ms var(--animation-cubic);\n    ${StyledContactsDiv}:hover & {\n      color: var(--accent-color);\n    }\n  }\n`;\n\nexport const IframeMob = styled.iframe`\n  width: 100vw;\n  @media screen and (min-width: 390px) {\n    width: 390px;\n  }\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n`;\nexport const IframeTab = styled.iframe`\n  display: none;\n  @media screen and (min-width: 768px) and (max-width: 1511px) {\n    display: block;\n  }\n`;\n\nexport const IframeDesk = styled.iframe`\n  display: none;\n  @media screen and (min-width: 1512px) {\n    display: block;\n  }\n`;\n","  import IMask from 'imask';\n  export const phoneInputHandler = () => {\n    const phoneInput = document.querySelector('#number');\n         new IMask(phoneInput, {\n    mask: \"+{38} 000 000 00 00\",\n  });\n  }\n\n\n  //   export const formatPhoneNumber = (input) => {\n  //   // const numbersOnly = input.replace(/\\D/g, '');\n  //   // const formattedNumber = '+380 ' + numbersOnly.trim();\n\n  //   if (input.split(' ')[0] === '+380') {\n  //     const numbersOnly = input.split(' ').slice(1).join('').replace(/\\D/g, '');\n\n  //     if (numbersOnly.length <= 12) {\n  //       let formattedPhoneNumber = '+380 ';\n\n  //       if (numbersOnly.length <= 3) {\n  //         formattedPhoneNumber += numbersOnly;\n  //       }\n\n  //       if (numbersOnly.length > 3 && numbersOnly.length < 6) {\n  //         formattedPhoneNumber +=\n  //           numbersOnly.slice(0, 3) + ' ' + numbersOnly.slice(3, 6);\n  //       }\n\n  //       if (numbersOnly.length >= 6 && numbersOnly.length < 8) {\n  //         formattedPhoneNumber +=\n  //           numbersOnly.slice(0, 3) +\n  //           ' ' +\n  //           numbersOnly.slice(3, 5) +\n  //           ' ' +\n  //           numbersOnly.slice(5, 7);\n  //       }\n  //       if (numbersOnly.length >= 8) {\n  //         formattedPhoneNumber +=\n  //           numbersOnly.slice(0, 3) +\n  //           ' ' +\n  //           numbersOnly.slice(3, 5) +\n  //           ' ' +\n  //           numbersOnly.slice(5, 7) +\n  //           ' ' +\n  //           numbersOnly.slice(7, 9);\n  //       }\n\n  //       return formattedPhoneNumber;\n  //     }\n  //   }\n\n  //   // return formattedNumber\n  // };\n\n                          // onChange={e => {\n                        //   const formattedNumber = formatPhoneNumber(\n                        //     e.target.value\n                        //   );\n                        //   setFieldValue('number', formattedNumber);\n                        // }}\n                        // onFocus={e => {\n                        //   if (!e.target.value) {\n                        //     setFieldValue('number', '+380 ');\n                        //   }\n                        // }}","import { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Formik, ErrorMessage, Form } from 'formik';\nimport { phoneInputHandler } from 'helpers/phoneUaInput';\nimport { Error } from 'components/Error';\nimport { StyledContainer } from 'components/Hero/Hero.styled';\nimport {\n  StyledBgSvg,\n  StyledContactsMarginDiv,\n  StyledDiv,\n  StyledFlexContactsDesktopDiv,\n  StyledH1,\n  StyledLightSpan,\n  StyledLink,\n  StyledLinkDiv,\n  StyledP,\n  StyledSpan,\n  StyledSvgDiv,\n  StyledUl,\n  StyledH3,\n} from './ContactsPage.styled';\nimport {\n  StyledFormDiv,\n  StyledLabel,\n  StyledField,\n  StyledSubmitDiv,\n  StyledButton,\n  StyledBorder,\n  StyledBorderNumber,\n  StyledSvg,\n  StyledCheckboxLabel,\n  StyledCheckboxField,\n  StyledSubmittedButton,\n  StyledSubmittedSpan,\n  StyledSubmittedP,\n} from 'components/SectionForm/SectionForm.styled';\nimport sprite from '../../images/sprite.svg';\nimport { schema } from 'components/CarServiceRepair/CarServiceRepairForm';\nimport { StyledFormikContactsDiv } from 'components/CarServiceRepair/CarServiceRepair.styled';\nimport {\n  IframeDesk,\n  IframeMob,\n  IframeTab,\n} from 'components/SectionContacts/SectionContacts.styled';\nconst ContactsPage = () => {\n  const [t] = useTranslation();\n  const [formSubmitted, setFormSubmitted] = useState(false);\n  const handleSubmit = ({ name, number }, { resetForm }) => {\n    setFormSubmitted(true);\n    // console.log(name, number);\n    // sending data\n    resetForm();\n  };\n  return (\n    <>\n      <section>\n        <StyledContainer>\n          <StyledFlexContactsDesktopDiv>\n            <StyledContactsMarginDiv>\n              <StyledBgSvg width=\"210\" height=\"155\">\n                <use href={`${sprite}#icon-bg`}></use>\n              </StyledBgSvg>\n              <StyledH1>\n                {t('contacts.h3.0')}\n                <br />\n                {t('contacts.h3.1')}\n              </StyledH1>\n              <StyledUl>\n                <li>\n                  <StyledDiv>\n                    <StyledSvgDiv>\n                      <svg width=\"20\" height=\"20\">\n                        <use href={`${sprite}#icon-map-pin`}></use>\n                      </svg>\n                    </StyledSvgDiv>\n                    <StyledLink\n                      href=\"https://maps.app.goo.gl/WCqPA8hvKJcHS3WBA\"\n                      target=\"_blank\"\n                    >\n                      <StyledSpan>{t('contacts.addressSpan.0')}</StyledSpan>\n                      {t('contacts.addressSpan.1')}\n                    </StyledLink>\n                  </StyledDiv>\n                </li>\n                <li>\n                  <StyledDiv>\n                    <StyledSvgDiv>\n                      <svg width=\"20\" height=\"20\">\n                        <use href={`${sprite}#icon-email`}></use>\n                      </svg>\n                    </StyledSvgDiv>\n                    <StyledLink href=\"mailto:sto@571.com.ua\">\n                      sto@571.com.ua\n                    </StyledLink>\n                  </StyledDiv>\n                </li>\n                <li>\n                  <StyledDiv>\n                    <StyledSvgDiv>\n                      <svg width=\"20\" height=\"20\">\n                        <use href={`${sprite}#icon-call-white-outline`}></use>\n                      </svg>\n                    </StyledSvgDiv>\n                    <StyledLinkDiv>\n                      <StyledLink href=\"tel:050 936 34 00\">\n                        050 936 34 00\n                      </StyledLink>\n                      <StyledLink href=\"tel:044 698 98 98\">\n                        063 527 15 19\n                      </StyledLink>\n                    </StyledLinkDiv>\n                  </StyledDiv>\n                </li>\n                <li>\n                  <StyledDiv>\n                    <StyledSvgDiv>\n                      <svg width=\"20\" height=\"20\">\n                        <use href={`${sprite}#icon-time`}></use>\n                      </svg>\n                    </StyledSvgDiv>\n                    <div>\n                      <StyledP>\n                        <StyledLightSpan>Пн- Пт</StyledLightSpan>с 09:00-18:00\n                      </StyledP>\n                      <StyledP>\n                        <StyledLightSpan>Сб-Вс</StyledLightSpan>с 09:00-16:00\n                      </StyledP>\n                    </div>\n                  </StyledDiv>\n                </li>\n              </StyledUl>\n            </StyledContactsMarginDiv>\n            <StyledFormikContactsDiv>\n              <StyledH3>{t('form.h3')}</StyledH3>\n              <Formik\n                initialValues={{ name: '', number: '', checkbox: false }}\n                validationSchema={schema}\n                onSubmit={handleSubmit}\n              >\n                {({ setFieldValue }) => (\n                  <Form>\n                    <StyledFormDiv>\n                      <StyledLabel htmlFor=\"name\">\n                        {t('form.labels.0')}{' '}\n                      </StyledLabel>\n                      <StyledBorder></StyledBorder>\n                      <StyledSvg\n                        width=\"22\"\n                        height=\"22\"\n                        style={{ left: '26px' }}\n                      >\n                        <use href={`${sprite}#icon-address-book`}></use>\n                      </StyledSvg>\n                      <StyledField\n                        name=\"name\"\n                        id=\"name\"\n                        placeholder={t('form.placeholderName')}\n                        autoComplete=\"off\"\n                      />\n                      <ErrorMessage name=\"name\" component={Error} />\n                    </StyledFormDiv>\n\n                    <StyledFormDiv>\n                      <StyledLabel htmlFor=\"number\">\n                        {t('form.labels.1')}\n                      </StyledLabel>\n                      <StyledBorderNumber></StyledBorderNumber>\n                      <StyledSvg\n                        width=\"22\"\n                        height=\"22\"\n                        style={{ left: '26px' }}\n                      >\n                        <use href={`${sprite}#icon-call-yellow-outline`}></use>\n                      </StyledSvg>\n                      <StyledField\n                        name=\"number\"\n                        id=\"number\"\n                        type=\"tel\"\n                        placeholder=\"+38 XXX ХXX XX XX\"\n                        autoComplete=\"off\"\n                        onClick={phoneInputHandler}\n                      />\n                      <ErrorMessage name=\"number\" component={Error} />\n                    </StyledFormDiv>\n\n                    <StyledSubmitDiv>\n                      <StyledCheckboxLabel>\n                        <StyledCheckboxField\n                          name=\"checkbox\"\n                          type=\"checkbox\"\n                          required\n                        />\n                        <ErrorMessage name=\"checkbox\" component={Error} />\n                        {t('form.checkboxText')}\n                      </StyledCheckboxLabel>\n                      {!formSubmitted && (\n                        <StyledButton type=\"submit\">\n                          {t('header.buttonText')}\n                        </StyledButton>\n                      )}\n                      {formSubmitted && (\n                        <StyledSubmittedButton>\n                          <StyledSubmittedP>\n                            <StyledSubmittedSpan>\n                              {t('form.buttonSubmittedText.0')}\n                            </StyledSubmittedSpan>\n                            {t('form.buttonSubmittedText.1')}\n                          </StyledSubmittedP>\n                        </StyledSubmittedButton>\n                      )}\n                    </StyledSubmitDiv>\n                  </Form>\n                )}\n              </Formik>\n            </StyledFormikContactsDiv>\n          </StyledFlexContactsDesktopDiv>\n        </StyledContainer>\n      </section>\n      <section>\n        <StyledContainer style={{ padding: 0 }}>\n          <IframeMob\n            src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2540.0024756477546!2d30.631496676256194!3d50.45967858669968!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x40d4daabb5c2eced%3A0x7d7bbb92bdff9e34!2z0LLRg9C70LjRhtGPINCT0LXRgtGM0LzQsNC90LAg0J_QsNCy0LvQsCDQn9C-0LvRg9Cx0L7RgtC60LAsIDUy0JEsINCa0LjRl9CyLCAwMjAwMA!5e0!3m2!1sru!2sua!4v1695732665981!5m2!1sru!2sua\"\n            width=\"390\"\n            height=\"518\"\n            style={{ border: 0 }}\n            allowFullScreen=\"\"\n            title=\"mobile-map\"\n            loading=\"lazy\"\n            referrerPolicy=\"no-referrer-when-downgrade\"\n          ></IframeMob>\n          <IframeTab\n            src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2540.0024756477546!2d30.631496676256194!3d50.45967858669968!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x40d4daabb5c2eced%3A0x7d7bbb92bdff9e34!2z0LLRg9C70LjRhtGPINCT0LXRgtGM0LzQsNC90LAg0J_QsNCy0LvQsCDQn9C-0LvRg9Cx0L7RgtC60LAsIDUy0JEsINCa0LjRl9CyLCAwMjAwMA!5e0!3m2!1sru!2sua!4v1695732665981!5m2!1sru!2sua\"\n            width=\"768\"\n            height=\"518\"\n            style={{ border: 0 }}\n            allowFullScreen=\"\"\n            title=\"table-map\"\n            loading=\"lazy\"\n            referrerPolicy=\"no-referrer-when-downgrade\"\n          ></IframeTab>\n          <IframeDesk\n            src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2540.0024756477546!2d30.631496676256194!3d50.45967858669968!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x40d4daabb5c2eced%3A0x7d7bbb92bdff9e34!2z0LLRg9C70LjRhtGPINCT0LXRgtGM0LzQsNC90LAg0J_QsNCy0LvQsCDQn9C-0LvRg9Cx0L7RgtC60LAsIDUy0JEsINCa0LjRl9CyLCAwMjAwMA!5e0!3m2!1sru!2sua!4v1695732665981!5m2!1sru!2sua\"\n            width=\"1512\"\n            height=\"518\"\n            style={{ border: 0 }}\n            allowFullScreen=\"\"\n            title=\"desktop-map\"\n            loading=\"lazy\"\n            referrerPolicy=\"no-referrer-when-downgrade\"\n          ></IframeDesk>\n        </StyledContainer>\n      </section>\n    </>\n  );\n};\nexport default ContactsPage;\n"],"names":["schema","yup","shape","name","required","number","min","checkbox","CarServiceRepairForm","_useTranslation","useTranslation","t","_slicedToArray","_useState","useState","_useState2","formSubmitted","setFormSubmitted","_jsxs","StyledFormikDiv","children","_jsx","StyledH3","Formik","initialValues","validationSchema","onSubmit","_ref","_ref2","resetForm","_ref3","setFieldValue","Form","StyledFormDiv","StyledLabel","htmlFor","StyledBorder","StyledSvg","width","height","href","concat","sprite","StyledField","id","placeholder","autoComplete","ErrorMessage","component","Error","StyledBorderNumber","type","onClick","phoneInputHandler","StyledSubmitDiv","StyledCheckboxLabel","StyledCheckboxField","StyledButton","StyledSubmittedButton","StyledSubmittedP","StyledSubmittedSpan","style","color","fontSize","textAlign","marginTop","marginBottom","toLowerCase","styled","_templateObject","_taggedTemplateLiteral","StyledContactsUl","_templateObject2","StyledOrderLi","_templateObject3","StyledContactsDiv","_templateObject4","StyledContactsSvg","_templateObject5","StyledContactsP","_templateObject6","StyledLink","_templateObject7","IframeMob","_templateObject8","IframeTab","_templateObject9","IframeDesk","_templateObject10","phoneInput","document","querySelector","IMask","mask","_Fragment","StyledContainer","StyledFlexContactsDesktopDiv","StyledContactsMarginDiv","StyledBgSvg","StyledH1","StyledUl","StyledDiv","StyledSvgDiv","target","StyledSpan","StyledLinkDiv","StyledP","StyledLightSpan","StyledFormikContactsDiv","left","padding","src","border","allowFullScreen","title","loading","referrerPolicy"],"sourceRoot":""}