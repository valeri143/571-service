{"version":3,"file":"static/js/858.70ad4b51.chunk.js","mappings":"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","sources":["components/CarServiceRepair/CarServiceRepairForm.jsx","components/CarWashServiceRepair/CarWashServiceRepairHero.jsx","components/Error.jsx","helpers/phoneUaInput.js","components/CarWashServiceRepair/CarWashServiceHeadlightPolishingAbout.jsx","pages/CarWashServicePage/CarWashServiceHeadlightPolishingPage/CarWashServiceHeadlightPolishingPage.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Formik, ErrorMessage, Form } from 'formik';\nimport * as yup from 'yup';\nimport { phoneInputHandler } from 'helpers/phoneUaInput';\nimport { Error } from 'components/Error';\nimport { StyledFormikDiv, StyledH3 } from './CarServiceRepair.styled';\nimport {\n  StyledFormDiv,\n  StyledLabel,\n  StyledField,\n  StyledSubmitDiv,\n  StyledButton,\n  StyledBorder,\n  StyledBorderNumber,\n  StyledSvg,\n  StyledCheckboxLabel,\n  StyledCheckboxField,\n  StyledSubmittedButton,\n  StyledSubmittedSpan,\n  StyledSubmittedP,\n} from '../SectionForm/SectionForm.styled';\nimport sprite from '../../images/sprite.svg';\n\nexport const schema = yup.object().shape({\n  name: yup.string().required('Please enter your name'),\n  number: yup\n    .string()\n    .min(10, 'Must be more than 10 characters')\n    .required(\"Please enter the phone's number\"),\n  checkbox: yup.boolean().required('Please check the checkbox to continue'),\n});\nexport const CarServiceRepairForm = () => {\n  const [t] = useTranslation();\n  const [formSubmitted, setFormSubmitted] = useState(false);\n  const handleSubmit = ({ name, number }, { resetForm }) => {\n    setFormSubmitted(true);\n    // console.log(name, number);\n    // sending data\n    resetForm();\n  };\n  return (\n    <StyledFormikDiv>\n      <StyledH3>{t('form.h3')}</StyledH3>\n      <Formik\n        initialValues={{ name: '', number: '', checkbox: false }}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        {({ setFieldValue }) => (\n          <Form>\n            <StyledFormDiv>\n              <StyledLabel htmlFor=\"name\">{t('form.labels.0')} </StyledLabel>\n              <StyledBorder></StyledBorder>\n              <StyledSvg width=\"22\" height=\"22\">\n                <use href={`${sprite}#icon-address-book`}></use>\n              </StyledSvg>\n              <StyledField\n                name=\"name\"\n                id=\"name\"\n                placeholder={t('form.placeholderName')}\n                autoComplete=\"off\"\n              />\n              <ErrorMessage name=\"name\" component={Error} />\n            </StyledFormDiv>\n\n            <StyledFormDiv>\n              <StyledLabel htmlFor=\"number\">{t('form.labels.1')}</StyledLabel>\n              <StyledBorderNumber></StyledBorderNumber>\n              <StyledSvg width=\"22\" height=\"22\">\n                <use href={`${sprite}#icon-call-yellow-outline`}></use>\n              </StyledSvg>\n              <StyledField\n                name=\"number\"\n                id=\"number\"\n                type=\"tel\"\n                placeholder=\"+38 XXX Ð¥XX XX XX\"\n                autoComplete=\"off\"\n                onClick={phoneInputHandler}\n              />\n              <ErrorMessage name=\"number\" component={Error} />\n            </StyledFormDiv>\n\n            <StyledSubmitDiv>\n              <StyledCheckboxLabel>\n                <StyledCheckboxField name=\"checkbox\" type=\"checkbox\" required />\n                <ErrorMessage name=\"checkbox\" component={Error} />\n                {t('form.checkboxText')}\n              </StyledCheckboxLabel>\n              {!formSubmitted && (\n                <StyledButton type=\"submit\">\n                  {t('header.buttonText')}\n                </StyledButton>\n              )}\n              {formSubmitted && (\n                <StyledSubmittedButton>\n                  <StyledSubmittedP>\n                    <StyledSubmittedSpan>\n                      {t('form.buttonSubmittedText.0')}\n                    </StyledSubmittedSpan>\n                    {t('form.buttonSubmittedText.1')}\n                  </StyledSubmittedP>\n                </StyledSubmittedButton>\n              )}\n            </StyledSubmitDiv>\n          </Form>\n        )}\n      </Formik>\n    </StyledFormikDiv>\n  );\n};\n","import { useTranslation } from 'react-i18next';\nimport { StyledContainer, StyledP } from 'components/Hero/Hero.styled';\nimport { StyledH1 } from 'components/CarServiceRepair/CarServiceRepair.styled';\nimport {\n  StyledButtonDiv,\n  StyledButtonP,\n  StyledCircleDiv,\n  StyledSvg,\n} from 'components/Header/Header.styled';\nimport sprite from '../../images/sprite.svg';\nimport { scrollToForm } from 'helpers/scrollToForm';\n\nexport const CarWashServiceRepairHero = ({ h1, p, buttonText, style, Bg }) => {\n  const { t } = useTranslation();\n  return (\n    <section>\n      <Bg>\n        <StyledContainer>\n          <StyledH1 style={{ width: 'auto' }}>{t(`${h1}`)}</StyledH1>\n          {p ? (\n            <>\n              <StyledP>{t(`${p}`)}</StyledP>\n              <StyledButtonDiv onClick={scrollToForm} style={style}>\n                <StyledCircleDiv></StyledCircleDiv>\n                <StyledSvg width=\"18\" height=\"18\">\n                  <use href={`${sprite}#icon-car-wash`}></use>\n                </StyledSvg>\n                <StyledButtonP>{t(`${buttonText}`)}</StyledButtonP>\n              </StyledButtonDiv>\n            </>\n          ) : (\n            <StyledButtonDiv style={style} onClick={scrollToForm}>\n              <StyledCircleDiv></StyledCircleDiv>\n              <StyledSvg width=\"18\" height=\"18\">\n                <use href={`${sprite}#icon-car-wash`}></use>\n              </StyledSvg>\n              <StyledButtonP>{t(`${buttonText}`)}</StyledButtonP>\n            </StyledButtonDiv>\n          )}\n        </StyledContainer>\n      </Bg>\n    </section>\n  );\n};\n","export const Error = ({ children }) => {\n  return (\n    <div\n      style={{\n        color: 'red',\n        fontSize: 14,\n        textAlign: 'center',\n        marginTop: '-20px',\n        marginBottom: '10px',\n      }}\n    >\n      {children.toLowerCase()}\n    </div>\n  );\n};\n","  import IMask from 'imask';\n  export const phoneInputHandler = () => {\n    const phoneInput = document.querySelector('#number');\n         new IMask(phoneInput, {\n    mask: \"+{38} 000 000 00 00\",\n  });\n  }\n\n\n  //   export const formatPhoneNumber = (input) => {\n  //   // const numbersOnly = input.replace(/\\D/g, '');\n  //   // const formattedNumber = '+380 ' + numbersOnly.trim();\n\n  //   if (input.split(' ')[0] === '+380') {\n  //     const numbersOnly = input.split(' ').slice(1).join('').replace(/\\D/g, '');\n\n  //     if (numbersOnly.length <= 12) {\n  //       let formattedPhoneNumber = '+380 ';\n\n  //       if (numbersOnly.length <= 3) {\n  //         formattedPhoneNumber += numbersOnly;\n  //       }\n\n  //       if (numbersOnly.length > 3 && numbersOnly.length < 6) {\n  //         formattedPhoneNumber +=\n  //           numbersOnly.slice(0, 3) + ' ' + numbersOnly.slice(3, 6);\n  //       }\n\n  //       if (numbersOnly.length >= 6 && numbersOnly.length < 8) {\n  //         formattedPhoneNumber +=\n  //           numbersOnly.slice(0, 3) +\n  //           ' ' +\n  //           numbersOnly.slice(3, 5) +\n  //           ' ' +\n  //           numbersOnly.slice(5, 7);\n  //       }\n  //       if (numbersOnly.length >= 8) {\n  //         formattedPhoneNumber +=\n  //           numbersOnly.slice(0, 3) +\n  //           ' ' +\n  //           numbersOnly.slice(3, 5) +\n  //           ' ' +\n  //           numbersOnly.slice(5, 7) +\n  //           ' ' +\n  //           numbersOnly.slice(7, 9);\n  //       }\n\n  //       return formattedPhoneNumber;\n  //     }\n  //   }\n\n  //   // return formattedNumber\n  // };\n\n                          // onChange={e => {\n                        //   const formattedNumber = formatPhoneNumber(\n                        //     e.target.value\n                        //   );\n                        //   setFieldValue('number', formattedNumber);\n                        // }}\n                        // onFocus={e => {\n                        //   if (!e.target.value) {\n                        //     setFieldValue('number', '+380 ');\n                        //   }\n                        // }}","import { lazy } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  StyledP,\n  StyledContainer,\n  StyledMarginDiv,\n  StyledFlexDesktopDiv,\n} from '../CarServiceRepair/CarServiceRepair.styled';\nimport { CarServiceRepairForm } from '../CarServiceRepair/CarServiceRepairForm';\n\nconst CarServiceRepairPrice = lazy(() =>\n  import('components/CarServiceRepair/CarServiceRepairPrice')\n);\n\nexport const CarWashServiceHeadlightPolishingAbout = () => {\n  const { t } = useTranslation();\n\n  return (\n    <section>\n      <StyledContainer>\n        <StyledFlexDesktopDiv>\n          <CarServiceRepairForm />\n          <StyledMarginDiv>\n            <StyledP>{t('headlightPolishing.paragraph.0')}</StyledP>\n            <StyledP>{t('headlightPolishing.paragraph.1')}</StyledP>\n            <StyledP>{t('headlightPolishing.paragraph.2')}</StyledP>\n          </StyledMarginDiv>\n\n          <CarServiceRepairPrice\n            h2={'headlightPolishing.h2'}\n            list={'headlightPolishing.serviceList'}\n            price={'headlightPolishing.priceList'}\n          />\n        </StyledFlexDesktopDiv>\n      </StyledContainer>\n    </section>\n  );\n};\n","import { lazy } from 'react';\nimport styled from 'styled-components';\nimport bg1x from 'images/desktop/backgrounds/services/headlight-bg@1x-min.jpg';\nimport bg2x from 'images/desktop/backgrounds/services/headlight-bg@2x-min.jpg';\nimport { CarWashServiceRepairHero } from 'components/CarWashServiceRepair/CarWashServiceRepairHero';\nimport { CarWashServiceHeadlightPolishingAbout } from 'components/CarWashServiceRepair/CarWashServiceHeadlightPolishingAbout';\n\nconst SectionFeedbacks = lazy(() =>\n  import('components/SectionFeedbacks/SectionFeedbacks')\n);\nconst SectionCertifications = lazy(() =>\n  import('components/SectionCertifications/SectionCertifications')\n);\nconst SectionForm = lazy(() => import('components/SectionForm/SectionForm'));\nconst SectionBlog = lazy(() => import('components/SectionBlog/SectionBlog'));\nconst SectionContacts = lazy(() =>\n  import('components//SectionContacts/SectionContacts')\n);\n\nconst StyledBackGroundImage = styled.div`\n  background-image: url(${bg1x});\n  background-repeat: no-repeat;\n  background-size: cover;\n  height: 470px;\n  position: relative;\n  top: -60px;\n  left: 0;\n  right: 0;\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url(${bg2x});\n  }\n  @media screen and (min-width: 1512px) {\n    top: -80px;\n    left: 0;\n    right: 0;\n  }\n`;\nconst style = {\n  gap: '15px',\n  maxWidth: 'max-content',\n  paddingRight: '15px',\n  margin: 0,\n  justifyContent: 'normal',\n};\n\nconst CarWashServiceHeadlightPolishingPage = () => {\n  return (\n    <>\n      <CarWashServiceRepairHero\n        h1={'services.servicesUlText.0'}\n        p={'headlightPolishing.p'}\n        buttonText={'carWash.buttonText'}\n        style={style}\n        Bg={StyledBackGroundImage}\n      />\n      <CarWashServiceHeadlightPolishingAbout />\n      <SectionFeedbacks />\n      <SectionCertifications />\n      <SectionForm />\n      <SectionBlog />\n      <SectionContacts />\n    </>\n  );\n};\n\nexport default CarWashServiceHeadlightPolishingPage;\n"],"names":["schema","yup","shape","name","required","number","min","checkbox","CarServiceRepairForm","_useTranslation","useTranslation","t","_slicedToArray","_useState","useState","_useState2","formSubmitted","setFormSubmitted","_jsxs","StyledFormikDiv","children","_jsx","StyledH3","Formik","initialValues","validationSchema","onSubmit","_ref","_ref2","resetForm","_ref3","setFieldValue","Form","StyledFormDiv","StyledLabel","htmlFor","StyledBorder","StyledSvg","width","height","href","concat","sprite","StyledField","id","placeholder","autoComplete","ErrorMessage","component","Error","StyledBorderNumber","type","onClick","phoneInputHandler","StyledSubmitDiv","StyledCheckboxLabel","StyledCheckboxField","StyledButton","StyledSubmittedButton","StyledSubmittedP","StyledSubmittedSpan","CarWashServiceRepairHero","h1","p","buttonText","style","Bg","StyledContainer","StyledH1","_Fragment","StyledP","StyledButtonDiv","scrollToForm","StyledCircleDiv","StyledButtonP","color","fontSize","textAlign","marginTop","marginBottom","toLowerCase","phoneInput","document","querySelector","IMask","mask","CarServiceRepairPrice","lazy","CarWashServiceHeadlightPolishingAbout","StyledFlexDesktopDiv","StyledMarginDiv","h2","list","price","SectionFeedbacks","SectionCertifications","SectionForm","SectionBlog","SectionContacts","StyledBackGroundImage","styled","_templateObject","_taggedTemplateLiteral","bg1x","bg2x","gap","maxWidth","paddingRight","margin","justifyContent"],"sourceRoot":""}