{"version":3,"file":"static/js/121.f9db46bd.chunk.js","mappings":"mPAqCMA,EAASC,EAAAA,KAAaC,MAAM,CAChCC,KAAMF,EAAAA,KAAaG,SAAS,0BAC5BC,OAAQJ,EAAAA,KAELK,IAAI,GAAI,mCACRF,SAAS,mCACZG,SAAUN,EAAAA,KAAcG,SAAS,2CAoHnC,UAjHoB,WAClB,IAAAI,GAAYC,EAAAA,EAAAA,MAALC,GAAqBC,EAAAA,EAAAA,GAAAH,EAAA,GAApB,GACRI,GAA0CC,EAAAA,EAAAA,WAAS,GAAMC,GAAAH,EAAAA,EAAAA,GAAAC,EAAA,GAAlDG,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAQtC,OACEG,EAAAA,EAAAA,KAAA,WAAAC,UACED,EAAAA,EAAAA,KAACE,EAAAA,GAAqB,CAAAD,UACpBE,EAAAA,EAAAA,MAACC,EAAAA,GAAe,CAAAH,SAAA,EACdD,EAAAA,EAAAA,KAACK,EAAAA,GAAW,CAACC,IAAKC,EAAIC,IAAI,oBAAoBC,QAAQ,UACtDN,EAAAA,EAAAA,MAACO,EAAAA,GAAS,CAAAT,SAAA,EACRD,EAAAA,EAAAA,KAACW,EAAAA,GAAe,KAChBX,EAAAA,EAAAA,KAACY,EAAAA,GAAQ,CAAAX,SAAER,EAAE,iBAEfO,EAAAA,EAAAA,KAACa,EAAAA,GAAQ,CAAAZ,SAAER,EAAE,cACbO,EAAAA,EAAAA,KAACc,EAAAA,GAAM,CACLC,cAAe,CAAE7B,KAAM,GAAIE,OAAQ,GAAIE,UAAU,GACjD0B,iBAAkBjC,EAClBkC,SApBW,SAAHC,EAAAC,GAAUD,EAAJhC,KAAYgC,EAAN9B,OAA6B,IAAjBgC,EAASD,EAATC,UACxCrB,GAAiB,GAGjBqB,GACF,EAeiCnB,SAEtB,SAAAoB,GAAA,IAAGC,EAAaD,EAAbC,cAAa,OACfnB,EAAAA,EAAAA,MAACoB,EAAAA,GAAI,CAAAtB,SAAA,EACHE,EAAAA,EAAAA,MAACqB,EAAAA,GAAa,CAAAvB,SAAA,EACZE,EAAAA,EAAAA,MAACsB,EAAAA,GAAW,CAACC,QAAQ,OAAMzB,SAAA,CACxBR,EAAE,iBAAkB,QAEvBO,EAAAA,EAAAA,KAAC2B,EAAAA,GAAY,KACb3B,EAAAA,EAAAA,KAAC4B,EAAAA,GAAS,CAACC,MAAM,KAAKC,OAAO,KAAI7B,UAC/BD,EAAAA,EAAAA,KAAA,OAAK+B,KAAI,GAAAC,OAAKC,EAAAA,EAAM,2BAEtBjC,EAAAA,EAAAA,KAACkC,EAAAA,GAAW,CACVhD,KAAK,OACLiD,GAAG,OACHC,YAAa3C,EAAE,wBACf4C,aAAa,SAEfrC,EAAAA,EAAAA,KAACsC,EAAAA,GAAY,CAACpD,KAAK,OAAOqD,UAAWC,EAAAA,QAGvCrC,EAAAA,EAAAA,MAACqB,EAAAA,GAAa,CAAAvB,SAAA,EACZD,EAAAA,EAAAA,KAACyB,EAAAA,GAAW,CAACC,QAAQ,SAAQzB,SAC1BR,EAAE,oBAELO,EAAAA,EAAAA,KAACyC,EAAAA,GAAkB,KACnBzC,EAAAA,EAAAA,KAAC4B,EAAAA,GAAS,CAACC,MAAM,KAAKC,OAAO,KAAI7B,UAC/BD,EAAAA,EAAAA,KAAA,OAAK+B,KAAI,GAAAC,OAAKC,EAAAA,EAAM,kCAEtBjC,EAAAA,EAAAA,KAACkC,EAAAA,GAAW,CACVhD,KAAK,SACLiD,GAAG,SACHO,KAAK,MACLN,YAAY,oBACZC,aAAa,MACbM,SAAU,SAAAC,GACR,IAAMC,GAAkBC,EAAAA,EAAAA,GAAkBF,EAAEG,OAAOC,OACnD1B,EAAc,SAAUuB,EAC1B,EACAI,QAAS,SAAAL,GACFA,EAAEG,OAAOC,OACZ1B,EAAc,SAAU,QAE5B,KAEFtB,EAAAA,EAAAA,KAACsC,EAAAA,GAAY,CAACpD,KAAK,SAASqD,UAAWC,EAAAA,QAGzCrC,EAAAA,EAAAA,MAAC+C,EAAAA,GAAe,CAAAjD,SAAA,EACdE,EAAAA,EAAAA,MAACgD,EAAAA,GAAmB,CAAAlD,SAAA,EAClBD,EAAAA,EAAAA,KAACoD,EAAAA,GAAmB,CAClBlE,KAAK,WACLwD,KAAK,WACLvD,UAAQ,KAEVa,EAAAA,EAAAA,KAACsC,EAAAA,GAAY,CAACpD,KAAK,WAAWqD,UAAWC,EAAAA,IACxC/C,EAAE,yBAEHK,IACAE,EAAAA,EAAAA,KAACqD,EAAAA,GAAY,CAACX,KAAK,SAAQzC,SACxBR,EAAE,uBAGNK,IACCE,EAAAA,EAAAA,KAACsD,EAAAA,GAAqB,CAAArD,UACpBE,EAAAA,EAAAA,MAACoD,EAAAA,GAAgB,CAAAtD,SAAA,EACfD,EAAAA,EAAAA,KAACwD,EAAAA,GAAmB,CAAAvD,SACjBR,EAAE,gCAEJA,EAAE,wCAKN,KAGXU,EAAAA,EAAAA,MAACsD,EAAAA,GAAa,CAAAxD,SAAA,EACZD,EAAAA,EAAAA,KAAC0D,EAAAA,GAAa,KACdvD,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACED,EAAAA,EAAAA,KAAC2D,EAAAA,GAAO,CAAA1D,SAAER,EAAE,aACZO,EAAAA,EAAAA,KAAC4D,EAAAA,GAAU,CAAC7B,KAAK,oBAAmB9B,SAAC,8BAOnD,C,2fC1JaG,EAAkByD,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8YAmB5BC,EAAcH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,8DAMxBrD,EAAYmD,EAAAA,GAAAA,IAAUK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,kEAMtBpD,EAAkBkD,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,mIAO5BnD,EAAWiD,EAAAA,GAAAA,GAASO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,0FAOpBlD,EAAWgD,EAAAA,GAAAA,GAASQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,oKAUpBO,EAAaT,EAAAA,GAAAA,KAAWU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,qIAQxBJ,EAAUE,EAAAA,GAAAA,EAAQW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,2EAMlBnC,EAAYiC,EAAAA,GAAAA,IAAUY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,+DAMtBW,EAAWb,EAAAA,GAAAA,GAASc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,4HAOpBa,EAAaf,EAAAA,GAAAA,GAASgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,8FAOtBe,EAAoBjB,EAAAA,GAAAA,IAAUkB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,2SAe9BiB,EAAsBnB,EAAAA,GAAAA,IAAUoB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,kVAchCmB,EAAmBrB,EAAAA,GAAAA,GAASsB,IAAAA,GAAApB,EAAAA,EAAAA,GAAA,wOAa5BqB,GAAgBvB,EAAAA,EAAAA,IAAOwB,EAAAA,GAAPxB,CAAeyB,IAAAA,GAAAvB,EAAAA,EAAAA,GAAA,6SAe/BwB,GAAkB1B,EAAAA,EAAAA,IAAOwB,EAAAA,GAAPxB,CAAe2B,IAAAA,GAAAzB,EAAAA,EAAAA,GAAA,+QAcjC0B,EAAW5B,EAAAA,GAAAA,GAAS6B,IAAAA,GAAA3B,EAAAA,EAAAA,GAAA,oG","sources":["components/SectionForm/SectionForm.jsx","components/SectionServices/SectionServices.styled.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Formik, ErrorMessage, Form } from 'formik';\nimport * as yup from 'yup';\nimport { formatPhoneNumber } from 'helpers/phoneUaInput';\nimport { Error } from 'components/Error';\nimport {\n  StyledCircleDiv,\n  StyledContainer,\n} from 'components/SectionServices/SectionServices.styled';\nimport {\n  StyledBackGroundImage,\n  StyledBgImg,\n  StyledDiv,\n  StyledH2,\n  StyledH3,\n  StyledFormDiv,\n  StyledLabel,\n  StyledField,\n  StyledSubmitDiv,\n  StyledButton,\n  StyledBorder,\n  StyledBorderNumber,\n  StyledSvg,\n  StyledCheckboxLabel,\n  StyledCheckboxField,\n  StyledP,\n  StyledLink,\n  StyledLineDiv,\n  StyledFlexDiv,\n  StyledSubmittedButton,\n  StyledSubmittedSpan,\n  StyledSubmittedP,\n} from './SectionForm.styled';\nimport bg from '../../images/bg-circle.png';\nimport sprite from '../../images/sprite.svg';\n\nconst schema = yup.object().shape({\n  name: yup.string().required('Please enter your name'),\n  number: yup\n    .string()\n    .min(10, 'Must be more than 10 characters')\n    .required(\"Please enter the phone's number\"),\n  checkbox: yup.boolean().required('Please check the checkbox to continue'),\n});\n\nconst SectionForm = () => {\n  const [t] = useTranslation();\n  const [formSubmitted, setFormSubmitted] = useState(false);\n  const handleSubmit = ({ name, number }, { resetForm }) => {\n    setFormSubmitted(true);\n    // console.log(name, number);\n    // sending data\n    resetForm();\n  };\n\n  return (\n    <section>\n      <StyledBackGroundImage>\n        <StyledContainer>\n          <StyledBgImg src={bg} alt=\"background-circle\" loading=\"lazy\" />\n          <StyledDiv>\n            <StyledCircleDiv></StyledCircleDiv>\n            <StyledH2>{t('form.h2')}</StyledH2>\n          </StyledDiv>\n          <StyledH3>{t('form.h3')}</StyledH3>\n          <Formik\n            initialValues={{ name: '', number: '', checkbox: false }}\n            validationSchema={schema}\n            onSubmit={handleSubmit}\n          >\n            {({ setFieldValue }) => (\n              <Form>\n                <StyledFormDiv>\n                  <StyledLabel htmlFor=\"name\">\n                    {t('form.labels.0')}{' '}\n                  </StyledLabel>\n                  <StyledBorder></StyledBorder>\n                  <StyledSvg width=\"22\" height=\"22\">\n                    <use href={`${sprite}#icon-address-book`}></use>\n                  </StyledSvg>\n                  <StyledField\n                    name=\"name\"\n                    id=\"name\"\n                    placeholder={t('form.placeholderName')}\n                    autoComplete=\"off\"\n                  />\n                  <ErrorMessage name=\"name\" component={Error} />\n                </StyledFormDiv>\n\n                <StyledFormDiv>\n                  <StyledLabel htmlFor=\"number\">\n                    {t('form.labels.1')}\n                  </StyledLabel>\n                  <StyledBorderNumber></StyledBorderNumber>\n                  <StyledSvg width=\"22\" height=\"22\">\n                    <use href={`${sprite}#icon-call-yellow-outline`}></use>\n                  </StyledSvg>\n                  <StyledField\n                    name=\"number\"\n                    id=\"number\"\n                    type=\"tel\"\n                    placeholder=\"+380 XXX XX XX XX\"\n                    autoComplete=\"off\"\n                    onChange={e => {\n                      const formattedNumber = formatPhoneNumber(e.target.value);\n                      setFieldValue('number', formattedNumber);\n                    }}\n                    onFocus={e => {\n                      if (!e.target.value) {\n                        setFieldValue('number', '+380 ');\n                      }\n                    }}\n                  />\n                  <ErrorMessage name=\"number\" component={Error} />\n                </StyledFormDiv>\n\n                <StyledSubmitDiv>\n                  <StyledCheckboxLabel>\n                    <StyledCheckboxField\n                      name=\"checkbox\"\n                      type=\"checkbox\"\n                      required\n                    />\n                    <ErrorMessage name=\"checkbox\" component={Error} />\n                    {t('form.checkboxText')}\n                  </StyledCheckboxLabel>\n                  {!formSubmitted && (\n                    <StyledButton type=\"submit\">\n                      {t('header.buttonText')}\n                    </StyledButton>\n                  )}\n                  {formSubmitted && (\n                    <StyledSubmittedButton>\n                      <StyledSubmittedP>\n                        <StyledSubmittedSpan>\n                          {t('form.buttonSubmittedText.0')}\n                        </StyledSubmittedSpan>\n                        {t('form.buttonSubmittedText.1')}\n                      </StyledSubmittedP>\n                    </StyledSubmittedButton>\n                  )}\n                </StyledSubmitDiv>\n              </Form>\n            )}\n          </Formik>\n          <StyledFlexDiv>\n            <StyledLineDiv></StyledLineDiv>\n            <div>\n              <StyledP>{t('form.p')}</StyledP>\n              <StyledLink href=\"tel:050 936 34 00\">050 936 34 00</StyledLink>\n            </div>\n          </StyledFlexDiv>\n        </StyledContainer>\n      </StyledBackGroundImage>\n    </section>\n  );\n};\n\nexport default SectionForm;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledContainer = styled.div`\n  padding: 80px 15px 80px 15px;\n  margin: 0 auto;\n  box-sizing: border-box;\n  outline: solid tomato;\n  position: relative;\n  text-align: left;\n  @media screen and (min-width: 390px) {\n    width: 390px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 768px;\n  }\n  @media screen and (min-width: 1512px) {\n    width: 1512px;\n    padding: 100px 156px 150px 156px;\n  }\n`;\n\nexport const StyledBgSvg = styled.svg`\n  position: absolute;\n  top: 24px;\n  right: 7px;\n`;\n\nexport const StyledDiv = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 10px;\n`;\n\nexport const StyledCircleDiv = styled.div`\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  background: linear-gradient(95deg, #fdc70d 0%, #fdab0d 100%);\n`;\n\nexport const StyledH2 = styled.h2`\n  text-align: right;\n  font-size: 12px;\n  line-height: 1.5;\n  opacity: 0.5;\n`;\n\nexport const StyledH3 = styled.h3`\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 1.2;\n  text-transform: uppercase;\n  position: relative;\n  z-index: 2;\n  margin-bottom: 20px;\n`;\n\nexport const StyledSpan = styled.span`\n  color: var(--accent-color);\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 1.2;\n  text-transform: uppercase;\n`;\n\nexport const StyledP = styled.p`\n  font-size: 16px;\n  line-height: 1.5;\n  margin-bottom: 30px;\n`;\n\nexport const StyledSvg = styled.svg`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n`;\n\nexport const StyledH4 = styled.h4`\n  color: var(--light-color);\n  font-size: 20px;\n  font-weight: 500;\n  line-height: 1.2;\n  margin-left: 16px;\n`;\nexport const StyledH402 = styled.h4`\n  font-size: 20px;\n  font-weight: 500;\n  line-height: 1.2;\n  margin-left: 16px;\n`;\n\nexport const StyledServicesDiv = styled.div`\n  position: relative;\n  z-index: 2;\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  max-width: 360px;\n  max-height: 374px;\n  border-radius: 8px;\n  background: #242424;\n  box-shadow: 10px 10px 15px 0px rgba(71, 71, 71, 0.2);\n  padding-bottom: 16px;\n  cursor: pointer;\n`;\n\nexport const StyledServicesDiv02 = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  max-width: 360px;\n  max-height: 374px;\n  border-radius: 8px;\n  background: radial-gradient(50% 50% at 50% 50%, #efd98f 0%, #ffc600 100%);\n  box-shadow: 10px 10px 15px 0px rgba(71, 71, 71, 0.2);\n  padding-bottom: 26px;\n  cursor: pointer;\n`;\n\nexport const StyledServicesUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 30px;\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    gap: 15px;\n  }\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  color: var(--light-color);\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.5;\n  display: inline-flex;\n  padding: 5px 10px;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  border-radius: 500px;\n  background: rgba(255, 255, 255, 0.1);\n  cursor: pointer;\n`;\n\nexport const StyledNavLink02 = styled(NavLink)`\n  display: inline-flex;\n  padding: 5px 10px;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  border-radius: 500px;\n  background: rgba(255, 255, 255, 0.5);\n  font-size: 14px;\n  line-height: 1.5;\n  font-weight: 400;\n  cursor: pointer;\n`;\n\nexport const StyledUl = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  row-gap: 10px;\n  margin-left: 16px;\n`;\n"],"names":["schema","yup","shape","name","required","number","min","checkbox","_useTranslation","useTranslation","t","_slicedToArray","_useState","useState","_useState2","formSubmitted","setFormSubmitted","_jsx","children","StyledBackGroundImage","_jsxs","StyledContainer","StyledBgImg","src","bg","alt","loading","StyledDiv","StyledCircleDiv","StyledH2","StyledH3","Formik","initialValues","validationSchema","onSubmit","_ref","_ref2","resetForm","_ref3","setFieldValue","Form","StyledFormDiv","StyledLabel","htmlFor","StyledBorder","StyledSvg","width","height","href","concat","sprite","StyledField","id","placeholder","autoComplete","ErrorMessage","component","Error","StyledBorderNumber","type","onChange","e","formattedNumber","formatPhoneNumber","target","value","onFocus","StyledSubmitDiv","StyledCheckboxLabel","StyledCheckboxField","StyledButton","StyledSubmittedButton","StyledSubmittedP","StyledSubmittedSpan","StyledFlexDiv","StyledLineDiv","StyledP","StyledLink","styled","_templateObject","_taggedTemplateLiteral","StyledBgSvg","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","StyledSpan","_templateObject7","_templateObject8","_templateObject9","StyledH4","_templateObject10","StyledH402","_templateObject11","StyledServicesDiv","_templateObject12","StyledServicesDiv02","_templateObject13","StyledServicesUl","_templateObject14","StyledNavLink","NavLink","_templateObject15","StyledNavLink02","_templateObject16","StyledUl","_templateObject17"],"sourceRoot":""}