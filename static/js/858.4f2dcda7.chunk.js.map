{"version":3,"file":"static/js/858.4f2dcda7.chunk.js","mappings":"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","sources":["components/CarServiceRepair/CarServiceRepairForm.jsx","components/CarWashServiceRepair/CarWashServiceRepairHero.jsx","components/Error.jsx","helpers/phoneUaInput.js","helpers/sendEmail.js","components/CarWashServiceRepair/CarWashServiceHeadlightPolishingAbout.jsx","pages/CarWashServicePage/CarWashServiceHeadlightPolishingPage/CarWashServiceHeadlightPolishingPage.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Formik, ErrorMessage, Form } from 'formik';\nimport * as yup from 'yup';\nimport { phoneInputHandler } from 'helpers/phoneUaInput';\nimport { Error } from 'components/Error';\nimport { StyledFormikDiv, StyledH3 } from './CarServiceRepair.styled';\nimport {\n  StyledFormDiv,\n  StyledLabel,\n  StyledField,\n  StyledSubmitDiv,\n  StyledButton,\n  StyledBorder,\n  StyledBorderNumber,\n  StyledSvg,\n  StyledCheckboxLabel,\n  StyledCheckboxField,\n  StyledSubmittedButton,\n  StyledSubmittedSpan,\n  StyledSubmittedP,\n} from '../SectionForm/SectionForm.styled';\nimport { sendEmail } from 'helpers/sendEmail';\nimport sprite from '../../images/sprite.svg';\n\nexport const schema = yup.object().shape({\n  name: yup.string().required('Please enter your name'),\n  number: yup\n    .string()\n    .min(10, 'Must be more than 10 characters')\n    .required(\"Please enter the phone's number\"),\n  checkbox: yup.boolean().required('Please check the checkbox to continue'),\n});\nexport const CarServiceRepairForm = () => {\n  const [t] = useTranslation();\n  const [formSubmitted, setFormSubmitted] = useState(false);\n  const handleSubmit = async ({ name, number }, { resetForm }) => {\n    setFormSubmitted(true);\n    try {\n      await sendEmail({\n        name,\n        number,\n      });\n      setFormSubmitted(true);\n    } catch (error) {\n      console.log(error);\n    }\n\n    resetForm();\n  };\n  return (\n    <StyledFormikDiv>\n      <StyledH3>{t('form.h3')}</StyledH3>\n      <Formik\n        initialValues={{ name: '', number: '', checkbox: false }}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <Form>\n          <StyledFormDiv>\n            <StyledLabel htmlFor=\"name\">{t('form.labels.0')} </StyledLabel>\n            <StyledBorder></StyledBorder>\n            <StyledSvg width=\"22\" height=\"22\">\n              <use href={`${sprite}#icon-address-book`}></use>\n            </StyledSvg>\n            <StyledField\n              name=\"name\"\n              id=\"name\"\n              placeholder={t('form.placeholderName')}\n              autoComplete=\"off\"\n            />\n            <ErrorMessage name=\"name\" component={Error} />\n          </StyledFormDiv>\n\n          <StyledFormDiv>\n            <StyledLabel htmlFor=\"number\">{t('form.labels.1')}</StyledLabel>\n            <StyledBorderNumber></StyledBorderNumber>\n            <StyledSvg width=\"22\" height=\"22\">\n              <use href={`${sprite}#icon-call-yellow-outline`}></use>\n            </StyledSvg>\n            <StyledField\n              name=\"number\"\n              id=\"number\"\n              type=\"tel\"\n              placeholder=\"+38 XXX Ð¥XX XX XX\"\n              autoComplete=\"off\"\n              onClick={phoneInputHandler}\n            />\n            <ErrorMessage name=\"number\" component={Error} />\n          </StyledFormDiv>\n\n          <StyledSubmitDiv>\n            <StyledCheckboxLabel>\n              <StyledCheckboxField name=\"checkbox\" type=\"checkbox\" required />\n              <ErrorMessage name=\"checkbox\" component={Error} />\n              {t('form.checkboxText')}\n            </StyledCheckboxLabel>\n            {!formSubmitted && (\n              <StyledButton type=\"submit\">\n                {t('header.buttonText')}\n              </StyledButton>\n            )}\n            {formSubmitted && (\n              <StyledSubmittedButton>\n                <StyledSubmittedP>\n                  <StyledSubmittedSpan>\n                    {t('form.buttonSubmittedText.0')}\n                  </StyledSubmittedSpan>\n                  {t('form.buttonSubmittedText.1')}\n                </StyledSubmittedP>\n              </StyledSubmittedButton>\n            )}\n          </StyledSubmitDiv>\n        </Form>\n      </Formik>\n    </StyledFormikDiv>\n  );\n};\n","import { useTranslation } from 'react-i18next';\nimport { StyledContainer, StyledP } from 'components/Hero/Hero.styled';\nimport { StyledH1 } from 'components/CarServiceRepair/CarServiceRepair.styled';\nimport {\n  StyledButtonDiv,\n  StyledButtonP,\n  StyledCircleDiv,\n  StyledSvg,\n} from 'components/Header/Header.styled';\nimport sprite from '../../images/sprite.svg';\nimport { scrollToForm } from 'helpers/scrollToForm';\n\nexport const CarWashServiceRepairHero = ({ h1, p, buttonText, style, Bg }) => {\n  const { t } = useTranslation();\n  return (\n    <section>\n      <Bg>\n        <StyledContainer>\n          <StyledH1 style={{ width: 'auto' }}>{t(`${h1}`)}</StyledH1>\n          {p ? (\n            <>\n              <StyledP>{t(`${p}`)}</StyledP>\n              <StyledButtonDiv onClick={scrollToForm} style={style}>\n                <StyledCircleDiv></StyledCircleDiv>\n                <StyledSvg width=\"18\" height=\"18\">\n                  <use href={`${sprite}#icon-car-wash`}></use>\n                </StyledSvg>\n                <StyledButtonP>{t(`${buttonText}`)}</StyledButtonP>\n              </StyledButtonDiv>\n            </>\n          ) : (\n            <StyledButtonDiv style={style} onClick={scrollToForm}>\n              <StyledCircleDiv></StyledCircleDiv>\n              <StyledSvg width=\"18\" height=\"18\">\n                <use href={`${sprite}#icon-car-wash`}></use>\n              </StyledSvg>\n              <StyledButtonP>{t(`${buttonText}`)}</StyledButtonP>\n            </StyledButtonDiv>\n          )}\n        </StyledContainer>\n      </Bg>\n    </section>\n  );\n};\n","export const Error = ({ children }) => {\n  return (\n    <div\n      style={{\n        color: 'red',\n        fontSize: 14,\n        textAlign: 'center',\n        marginTop: '-20px',\n        marginBottom: '10px',\n      }}\n    >\n      {children.toLowerCase()}\n    </div>\n  );\n};\n","  import IMask from 'imask';\n  export const phoneInputHandler = () => {\n    const phoneInput = document.querySelector('#number');\n         new IMask(phoneInput, {\n    mask: \"+{38} 000 000 00 00\",\n  });\n  }","export const sendEmail = ({ name, number, form = 'feedback' }) => {\n\n    const xhr = new XMLHttpRequest();\n    xhr.open('POST', '../../send.php', true);\n    xhr.setRequestHeader('Content-Type', 'application/json;charset=UTF-8');\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState === 4 && xhr.status === 200) {\n        console.log('Success:', xhr.responseText);\n      } else {\n        console.log('Error');\n      }\n    };\n\n    xhr.send(JSON.stringify({ name, number, form }));\n}","import { lazy } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  StyledP,\n  StyledContainer,\n  StyledMarginDiv,\n  StyledFlexDesktopDiv,\n} from '../CarServiceRepair/CarServiceRepair.styled';\nimport { CarServiceRepairForm } from '../CarServiceRepair/CarServiceRepairForm';\n\nconst CarServiceRepairPrice = lazy(() =>\n  import('components/CarServiceRepair/CarServiceRepairPrice')\n);\n\nexport const CarWashServiceHeadlightPolishingAbout = () => {\n  const { t } = useTranslation();\n\n  return (\n    <section>\n      <StyledContainer>\n        <StyledFlexDesktopDiv>\n          <CarServiceRepairForm />\n          <StyledMarginDiv>\n            <StyledP>{t('headlightPolishing.paragraph.0')}</StyledP>\n            <StyledP>{t('headlightPolishing.paragraph.1')}</StyledP>\n            <StyledP>{t('headlightPolishing.paragraph.2')}</StyledP>\n          </StyledMarginDiv>\n\n          <CarServiceRepairPrice\n            h2={'headlightPolishing.h2'}\n            list={'headlightPolishing.serviceList'}\n            price={'headlightPolishing.priceList'}\n          />\n        </StyledFlexDesktopDiv>\n      </StyledContainer>\n    </section>\n  );\n};\n","import { lazy } from 'react';\nimport styled from 'styled-components';\nimport bg1x from 'images/desktop/backgrounds/services/headlight-bg@1x-min.jpg';\nimport bg2x from 'images/desktop/backgrounds/services/headlight-bg@2x-min.jpg';\nimport { CarWashServiceRepairHero } from 'components/CarWashServiceRepair/CarWashServiceRepairHero';\nimport { CarWashServiceHeadlightPolishingAbout } from 'components/CarWashServiceRepair/CarWashServiceHeadlightPolishingAbout';\n\nconst SectionFeedbacks = lazy(() =>\n  import('components/SectionFeedbacks/SectionFeedbacks')\n);\nconst SectionCertifications = lazy(() =>\n  import('components/SectionCertifications/SectionCertifications')\n);\nconst SectionForm = lazy(() => import('components/SectionForm/SectionForm'));\nconst SectionBlog = lazy(() => import('components/SectionBlog/SectionBlog'));\nconst SectionContacts = lazy(() =>\n  import('components//SectionContacts/SectionContacts')\n);\n\nconst StyledBackGroundImage = styled.div`\n  background-image: url(${bg1x});\n  background-repeat: no-repeat;\n  background-size: cover;\n  height: 470px;\n  position: relative;\n  top: -60px;\n  left: 0;\n  right: 0;\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url(${bg2x});\n  }\n  @media screen and (min-width: 1512px) {\n    top: -80px;\n    left: 0;\n    right: 0;\n  }\n`;\nconst style = {\n  gap: '15px',\n  maxWidth: 'max-content',\n  paddingRight: '15px',\n  margin: 0,\n  justifyContent: 'normal',\n};\n\nconst CarWashServiceHeadlightPolishingPage = () => {\n  return (\n    <>\n      <CarWashServiceRepairHero\n        h1={'services.servicesUlText.0'}\n        p={'headlightPolishing.p'}\n        buttonText={'carWash.buttonText'}\n        style={style}\n        Bg={StyledBackGroundImage}\n      />\n      <CarWashServiceHeadlightPolishingAbout />\n      <SectionFeedbacks />\n      <SectionCertifications />\n      <SectionForm />\n      <SectionBlog />\n      <SectionContacts />\n    </>\n  );\n};\n\nexport default CarWashServiceHeadlightPolishingPage;\n"],"names":["schema","yup","shape","name","required","number","min","checkbox","CarServiceRepairForm","_useTranslation","useTranslation","t","_slicedToArray","_useState","useState","_useState2","formSubmitted","setFormSubmitted","handleSubmit","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","_ref2","resetForm","wrap","_context","prev","next","sendEmail","t0","console","log","stop","_x","_x2","apply","arguments","_jsxs","StyledFormikDiv","children","_jsx","StyledH3","Formik","initialValues","validationSchema","onSubmit","Form","StyledFormDiv","StyledLabel","htmlFor","StyledBorder","StyledSvg","width","height","href","concat","sprite","StyledField","id","placeholder","autoComplete","ErrorMessage","component","Error","StyledBorderNumber","type","onClick","phoneInputHandler","StyledSubmitDiv","StyledCheckboxLabel","StyledCheckboxField","StyledButton","StyledSubmittedButton","StyledSubmittedP","StyledSubmittedSpan","CarWashServiceRepairHero","h1","p","buttonText","style","Bg","StyledContainer","StyledH1","_Fragment","StyledP","StyledButtonDiv","scrollToForm","StyledCircleDiv","StyledButtonP","color","fontSize","textAlign","marginTop","marginBottom","toLowerCase","phoneInput","document","querySelector","IMask","mask","_ref$form","form","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","status","responseText","send","JSON","stringify","CarServiceRepairPrice","lazy","CarWashServiceHeadlightPolishingAbout","StyledFlexDesktopDiv","StyledMarginDiv","h2","list","price","SectionFeedbacks","SectionCertifications","SectionForm","SectionBlog","SectionContacts","StyledBackGroundImage","styled","_templateObject","_taggedTemplateLiteral","bg1x","bg2x","gap","maxWidth","paddingRight","margin","justifyContent"],"sourceRoot":""}